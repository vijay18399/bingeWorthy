{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/features/content/components/image-slider/image-slider.component.ts","./src/app/features/content/components/image-slider/image-slider.component.html","./src/app/features/content/content-routing.module.ts","./src/app/features/content/content.module.ts","./src/app/features/content/pages/content-slider/content-slider.component.ts","./src/app/features/content/pages/content-slider/content-slider.component.html","./src/app/features/content/pages/content/content.component.ts","./src/app/features/content/pages/content/content.component.html","./src/app/features/content/pages/home/home.component.ts","./src/app/features/content/pages/home/home.component.html","./src/app/features/content/pages/login/login.component.ts","./src/app/features/content/pages/login/login.component.html","./src/app/features/content/pages/search/search.component.ts","./src/app/features/content/pages/search/search.component.html","./src/app/shared/services/api.service.ts","./src/app/shared/services/auth.service.ts","./src/app/shared/shared.module.ts","./src/environments/environment.development.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from 'src/app/features/content/pages/home/home.component';\n\nconst routes: Routes = [\n  {\n    component:HomeComponent,\n    path:'',\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  showSearchbar: boolean = true;\n  showNavBar:boolean = true;\n  constructor(private router: Router) {\n    this.router.events.subscribe(event => {\n      if (event instanceof NavigationEnd) {\n        console.log(event.url)\n        this.showSearchbar = event.url != '/search';\n        this.showNavBar = event.url != '/login';\n      }\n\n    });\n  }\n  isLoggedIn(): boolean {\n    return true\n    // return this.authService.isLoggedIn();\n  }\n\n  logout(): void {\n    // this.authService.logout();\n    this.router.navigate([''])\n  }\n}\n","<nav *ngIf=\"showNavBar\"  [class.searchbar]=\"!showSearchbar\" >\n  <a class=\"brand m-l-16\"  routerLink=\"/\">BingeWorthy</a>\n  <div *ngIf=\"showSearchbar\" routerLink=\"/search\" class=\"search-container\">\n    <div class=\"suggestions\">\n        <div class=\"suggestion\">search  &nbsp; <span>  \"horro movies\"</span></div>\n        <div class=\"suggestion\">search  &nbsp; <span>  \"time travel movies\"</span></div>\n        <div class=\"suggestion\">search  &nbsp; <span>  \"dc movies\"</span></div>\n        <div class=\"suggestion\">search  &nbsp; <span>  \"marvel movies\"</span></div>\n        <div class=\"suggestion\">search  &nbsp; <span>  \"thor 4\"</span></div>\n    </div>\n    <i class=\"fa fa-search\"></i>\n  </div>\n  <div *ngIf=\"!showSearchbar\"  class=\"search-inputcontainer\">\n    <input placeholder=\"search for binge content\" type=\"text\">\n    <i class=\"fa fa-search\"></i>\n  </div>\n    <ul *ngIf=\"showSearchbar\" class=\"navbar\">\n      <li routerLink=\"/\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{ exact: true }\" class=\"nav-item\">\n        Home\n      </li>\n      <li routerLink=\"/explore\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{ exact: true }\" class=\"nav-item\">\n        Explore\n      </li>\n      <li routerLink=\"/login\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{ exact: true }\" class=\"nav-item\">\n        Login\n      </li>\n    </ul>\n</nav>\n  <router-outlet></router-outlet>\n\n\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HashLocationStrategy, LocationStrategy } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ContentModule } from './features/content/content.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    ContentModule\n  ],\n  providers: [\n  {\n    provide: LocationStrategy,\n    useClass: HashLocationStrategy,\n  },\n],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, Input } from '@angular/core';\nexport interface SlideInterface {\n  url: string;\n  title: string;\n}\n@Component({\n  selector: 'app-image-slider',\n  templateUrl: './image-slider.component.html',\n  styleUrls: ['./image-slider.component.scss']\n})\nexport class ImageSliderComponent {\n  @Input() slides: SlideInterface[] = [];\n  currentIndex: any=0;\n  getCurrentSlideUrl() {\n    return `url('${this.slides[this.currentIndex].url}')`;\n  }\n  goToPrevious(): void {\n    const isFirstSlide = this.currentIndex === 0;\n    const newIndex = isFirstSlide\n      ? this.slides.length - 1\n      : this.currentIndex - 1;\n\n    this.currentIndex = newIndex;\n  }\n\n  goToNext(): void {\n    const isLastSlide = this.currentIndex === this.slides.length - 1;\n    const newIndex = isLastSlide ? 0 : this.currentIndex + 1;\n    this.currentIndex = newIndex;\n  }\n  goToSlide(slideIndex: number): void {\n    this.currentIndex = slideIndex;\n  }\n}\n","<div class=\"slider\">\n  <div>\n    <div (click)=\"goToPrevious()\" class=\"leftArrow\">❰</div>\n    <div (click)=\"goToNext()\" class=\"rightArrow\">❱</div>\n  </div>\n  <div\n    class=\"slide\"\n    [ngStyle]=\"{ 'background-image': getCurrentSlideUrl() }\"\n  ></div>\n  <div class=\"dotsContainer\">\n    <div\n      *ngFor=\"let slide of slides; let slideIndex = index\"\n      class=\"dot\" [class.active]=\"slideIndex == currentIndex\"\n      (click)=\"goToSlide(slideIndex)\"\n    >\n      ●\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { HomeComponent } from './pages/home/home.component';\r\nimport { ContentComponent } from './pages/content/content.component';\r\nimport { ContentSliderComponent } from './pages/content-slider/content-slider.component';\r\nimport { LoginComponent } from './pages/login/login.component';\r\nimport { SearchComponent } from './pages/search/search.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    component:HomeComponent,\r\n    path:'',\r\n  },\r\n  {\r\n    component:ContentComponent,\r\n    path:'content/:id',\r\n  },\r\n  {\r\n    component:ContentSliderComponent,\r\n    path:'explore',\r\n  },\r\n  {\r\n    component:SearchComponent,\r\n    path:'search',\r\n  },\r\n  {\r\n    component:LoginComponent,\r\n    path:'login',\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ContentRoutingModule { }\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HomeComponent } from './pages/home/home.component';\nimport { ContentSliderComponent } from './pages/content-slider/content-slider.component';\nimport { LoginComponent } from './pages/login/login.component';\nimport { SearchComponent } from './pages/search/search.component';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { ImageSliderComponent } from './components/image-slider/image-slider.component';\nimport { ContentComponent } from './pages/content/content.component';\nimport { ContentRoutingModule } from './content-routing.module';\n@NgModule({\n  declarations: [\n    ImageSliderComponent,\n    HomeComponent,\n    LoginComponent,\n    SearchComponent,\n    ContentSliderComponent,\n    ContentComponent,\n  ],\n  imports: [\n    SharedModule,\n    ContentRoutingModule,\n    CommonModule,\n\n  ]\n})\nexport class ContentModule { }\n","import { Component, ElementRef, ViewChild } from '@angular/core';\nimport { ApiService } from 'src/app/shared/services/api.service';\n// import { KEY } from 'src/app/bo/enum';\n// import { ApiService } from 'src/app/services/api.service';\n@Component({\n  selector: 'app-content-slider',\n  templateUrl: './content-slider.component.html',\n  styleUrls: ['./content-slider.component.scss']\n})\nexport class ContentSliderComponent {\n\n  @ViewChild('reelsContainer', { static: false }) reelsContainer!: ElementRef;\n  movies:any = []\n  pageNumber:number =1;\n  shortNumber:number=0;\n  currentPage: number=1;\n  totalCount!:number;\n  loadDonetill!:number;\n  // Your existing movies array\n  constructor(public apiService: ApiService) {\n    this.fetchMovies();\n   }\n\n   fetchMovies() {\n     this.apiService.getContent({ perPage: 4, page: this.pageNumber }).subscribe((data) => {\n      this.totalCount = data.totalCount;\n      this.movies = [...this.movies,...data.contents];\n     });\n   }\n  ngOnInit(): void {\n    document.addEventListener(\"keydown\", (event:KeyboardEvent)=>{\n      if (event.key === \"ArrowDown\") {\n        this.navTo(this.shortNumber+1)\n       }\n       if (event.key ===\"ArrowUp\") {\n        this.navTo(this.shortNumber-1)\n       }\n    });\n  }\n   topAny(): boolean {\n    if(this.reelsContainer){\n      return  this.reelsContainer.nativeElement.scrollTop === 0;\n    }\n    return   true ;\n  }\n  navTo(i:number): void {\n\n    if(i+1>this.totalCount){\n      return;\n    }\n    console.log(i >= this.movies.length - 2 && this.movies.length <= this.totalCount)\n    this.shortNumber=i;\n    let  movieId =  this.movies[i]._id;\n    document.getElementById(movieId)?.scrollIntoView({behavior: \"smooth\",block: \"start\", inline: \"start\"})\n    if(i >= this.movies.length - 2 && this.movies.length <= this.totalCount){\n       this.pageNumber++;\n       this.fetchMovies()\n    }\n  }\n\n\n}\n","\n<div class=\"login-page\">\n  <div *ngIf=\"movies.length==0\" class=\"loader\">\n        <div class=\"circle\" id=\"a\"></div>\n        <div class=\"circle\" id=\"b\"></div>\n        <div class=\"circle\" id=\"c\"></div>\n        <div class=\"circle\" id=\"d\"></div>\n  </div>\n  <div *ngIf=\"movies.length!=0\" class=\"reelsContainer\">\n      <div [id]=\"x._id\"  *ngFor=\"let x of movies;let i=index\" class=\"reel\">\n        <div class=\"detail\">\n          <img  [src]=\"x.poster || 'assets/images/no-poster.jpg'\" alt=\"\">\n          <div class=\"info\">\n            {{x.title}}\n          </div>\n          <div class=\"actions\">\n            <div class=\"action active\">\n              <i class=\"fa-solid fa-thumbs-up\"></i>\n              <label>121K</label>\n            </div>\n            <div class=\"action\">\n              <i class=\"fa-solid fa-thumbs-down\"></i>\n              <label>1K</label>\n            </div>\n            <div routerLink=\"/content/{{x._id}}\" class=\"action\">\n              <i class=\"fa-solid fa-eye\"></i>\n              <label>11K</label>\n            </div>\n            <div class=\"action\">\n            <i class=\"fa-solid fa-bookmark\"></i>\n            </div>\n          </div>\n        </div>\n        <div [ngStyle]=\"{justifyContent: i==0 ? 'flex-end' : 'space-between' }\" class=\"nav-buttons\">\n          <i *ngIf=\"i!=0\" (click)=\"navTo(i-1)\" class=\"fa-solid fa-arrow-up\"></i>\n          <i  *ngIf=\"i+1!=totalCount\"  (click)=\"navTo(i+1)\" class=\"fa-solid fa-arrow-down\"></i>\n        </div>\n      </div>\n  </div>\n</div>\n","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ApiService } from 'src/app/shared/services/api.service';\n\n@Component({\n  selector: 'app-content',\n  templateUrl: './content.component.html',\n  styleUrls: ['./content.component.scss']\n})\nexport class ContentComponent {\n  movieId!: string;\nmovie : any;\nactiveSeason:any;\n  constructor(private route: ActivatedRoute,public  apiService: ApiService) { }\n// Assuming you have defined an array to keep track of expanded seasons:\nexpandedSeasons: any[] = [];\n\n// Function to toggle the visibility of season details\ntoggleSeason(i: any): void {\n  this.activeSeason  = this.movie.seasons[i];\n}\n\n// Function to check if a season is expanded or collapsed\nisSeasonExpanded(season: any): boolean {\n  return this.expandedSeasons.includes(season);\n}\n\n  ngOnInit(): void {\n    this.route.params.subscribe(params => {\n      this.movieId = params['id'];\n      // Call a method to fetch movie details based on the ID\n      this.getMovieDetails(this.movieId);\n    });\n  }\n\n  getMovieDetails(id: string): void {\n    // Implement your logic to fetch movie details from the server using the movie ID\n    // You can use an API service or make an HTTP request here\n    // Update the component properties with the fetched movie data\n    this.apiService.getContentById(id).subscribe((data) => {\n      console.log(data)\n      this.movie=data\n      if(this.movie.seasons.length){\n        this.activeSeason = this.movie.seasons[0]\n      }\n    });\n  }\n\n}\n","<div *ngIf=\"movieId && movie\" class=\"movie-page\">\n  <img class=\"poster\" [src]=\"movie.poster || 'assets/images/no-poster.jpg'\" alt=\"\">\n  <div class=\"movie-details\">\n    <div class=\"breadcrumb\">\n\n    </div>\n    <h2 class=\"title\">{{ movie.title }}</h2>\n    <div class=\"genres\">\n      <span class=\"genre\" *ngFor=\"let genre of movie.genres\">{{ genre }}</span>\n    </div>\n    <p class=\"plot\">{{ movie.plot }}</p>\n    <div class=\"details\">\n      <div *ngIf=\"movie.tags.length\" class=\"details-item\">\n        <span class=\"label\">Tags:</span>\n        <span class=\"value\">\n          <span class=\"tag\" *ngFor=\"let tag of movie.tags\">{{ tag }}</span>\n        </span>\n      </div>\n      <div *ngIf=\"movie.releaseDate\" class=\"details-item\">\n        <span class=\"label\">Release Date:</span>\n        <span class=\"value\">{{ movie.releaseDate | date:'medium' }}</span>\n      </div>\n    </div>\n    <div class=\"actors\">\n      <div class=\"actor-item\" *ngFor=\"let actor of movie.actors\">\n        <img [src]=\"actor.profile || 'assets/images/default-profile.png'\" alt=\"\">\n        <span class=\"value\">{{ actor.name }}</span>\n      </div>\n    </div>\n    <div class=\"seasons-tabs\">\n      <div class=\"season-btns\" >\n        <button [class.active]=\"season.number == activeSeason.number\" *ngFor=\"let season of movie.seasons;let i = index\" (click)=\"toggleSeason(i)\"> Season {{ i+1 }}</button>\n      </div>\n      <div *ngIf=\"activeSeason\" class=\"season-tab\">\n        <div>\n          <p *ngIf=\"activeSeason.description\" class=\"description\">{{ activeSeason.description }}</p>\n          <!-- Episodes List -->\n          <ul class=\"episodes-list\">\n            <li *ngFor=\"let episode of activeSeason.episodes; let i = index\">\n              <div>\n                <span> S{{activeSeason.number}}E{{i+1}} </span>\n                <span>\n                  <i class=\"fa-solid fa-calendar-days\"></i>\n                  5 Mar 2021\n                </span>\n\n              </div>\n              <h2>{{ episode.title }}</h2>\n              <p>\n                {{ episode.description }}\n              </p>\n\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n\n\n</div>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent {\n  slides = [\n    {\n      url:'https://www.themoviedb.org/t/p/original/nEufeZlyAOLqO2brrs0yeF1lgXO.jpg',\n      title : 'RRR',\n    },\n    {\n      url:'https://i.imgur.com/Js7wGIt.jpeg',\n      title : 'Bahubali',\n    },\n    {\n      url:'https://encrypted-tbn1.gstatic.com/images?q=tbn:ANd9GcSDT8DLq-8swTp99tkIg7WkHlQEChWGAl71dJClxCLnR4y5-zwd',\n      title : '24',\n    },\n    {\n      url : \"https://rukminim2.flixcart.com/image/850/1000/av-media/movies/g/x/d/robo-original-imadd5zx3tyf3ugq.jpeg\",\n      title:\"Robo\"\n    }\n  ]\n}\n","<div class=\"home-page\">\n  <div class=\"slider-container\">\n    <app-image-slider [slides]=\"slides\"></app-image-slider>\n  </div>\n  <div class=\"main-container\">\n      <h1>Find Your Next Addictive Series</h1>\n      <p>Filtered For You: Unearth Binge-Worthy Movies and Series Tailored to Your Tastes.</p>\n\n  </div>\n</div>\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/shared/services/auth.service';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent {\n  loginData = {\n    email: '',\n    password: ''\n  };\n  errorMessage :string='';\n  constructor(private authService: AuthService,private router: Router) {}\n\n  login() {\n    this.authService.login(this.loginData)\n      .subscribe(\n        (response:any) => {\n          // Handle successful login\n          console.log('Login successful');\n          const token = response.token; // Assuming the token is returned in the response\n          this.authService.storeToken(token);\n          this.router.navigate(['profile'])\n          // Redirect or perform any additional actions\n        },\n        (error:any) => {\n          // Handle login error\n          this.errorMessage= error.error;\n          console.error('Login failed', error);\n        }\n      );\n  }\n}\n","<div class=\"login-page\">\n   <div class=\"animation\">\n    <ul>\n      <li></li>\n      <li></li>\n      <li></li>\n      <li></li>\n      <li></li>\n      <li></li>\n      <li></li>\n      <li></li>\n      <li></li>\n      <li></li>\n      <li></li>\n    </ul>\n      <object data=\"assets/svg/tv2.svg\" type=\"\"></object>\n   </div>\n   <div class=\"login\">\n\n   </div>\n</div>\n\n<!-- <div class=\"login-page\">\n   <div class=\"card\">\n    <form autocomplete=\"off\" #ngForm=\"ngForm\" (ngSubmit)=\"ngForm.form.valid && login()\">\n      <h2>Log In</h2>\n      <div class=\"networkError\" *ngIf=\"errorMessage\">{{errorMessage}}</div>\n      <div class=\"input-container\">\n        <label for=\"email\">Email</label>\n        <input  type=\"email\"  name=\"email\" [(ngModel)]=\"loginData.email\" required  #email=\"ngModel\" [ngClass]=\"{ 'is-invalid': ngForm.submitted && email.errors }\">\n        <div *ngIf=\"ngForm.submitted && email.errors\" class=\"errors\">\n          <div *ngIf=\"email.errors['required']\">Email is required</div>\n          <div *ngIf=\"email.errors['email']\">Email is invalid</div>\n        </div>\n      </div>\n      <div class=\"input-container\">\n        <label for=\"password\">Password</label>\n        <input   type=\"password\"    name=\"password\"    [(ngModel)]=\"loginData.password\"  required #password=\"ngModel\" [ngClass]=\"{ 'is-invalid': ngForm.submitted && password.errors }\">\n        <div *ngIf=\"ngForm.submitted && password.errors\" class=\"errors\">\n          <div *ngIf=\"password.errors['required']\">password is required</div>\n        </div>\n      </div>\n      <button  type=\"submit\">Log In</button>\n    </form>\n  </div>\n\n</div> -->\n\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.scss']\n})\nexport class SearchComponent {\n\n}\n","<p>search works!</p>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment.development';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  private apiUrl = `${environment.apiUrl}/api`; // Replace with your API endpoint\n  constructor(private http: HttpClient) {}\n  createContent(content:any) {\n    return this.http.post<any>(`${this.apiUrl}/contents`, content);\n  }\n  getContent(params: any) {\n    const queryParams = {\n      params: {\n        perPage: params.perPage,\n        page: params.page,\n      },\n    };\n    return this.http.get<any>(`${this.apiUrl}/contents`, queryParams);\n  }\n  getContentById(id:string){\n    return this.http.get<any>(`${this.apiUrl}/contents/${id}`);\n  }\n  updateContent(id:string,content:any){\n    return this.http.put<any>(`${this.apiUrl}/contents/${id}`,content);\n  }\n  deleteContent(id:string){\n    return this.http.delete<any>(`${this.apiUrl}/contents/${id}`);\n  }\n  createActor(actor: any) {\n    return this.http.post<any>(`${this.apiUrl}/actors`, actor);\n  }\n\n  getActorById(id: string) {\n    return this.http.get<any>(`${this.apiUrl}/actors/${id}`);\n  }\n\n  updateActor(id: string, actor: any) {\n    return this.http.put<any>(`${this.apiUrl}/actors/${id}`, actor);\n  }\n\n  deleteActor(id: string) {\n    return this.http.delete<any>(`${this.apiUrl}/actors/${id}`);\n  }\n\n\n\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment.development';\nimport jwt_decode from 'jwt-decode';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private apiUrl = `${environment.apiUrl}/auth`;\n  constructor(private http: HttpClient) {}\n  signUp(firstName: string, lastName: string, email: string, password: string) {\n    const userData = {\n      firstName: firstName,\n      lastName: lastName,\n      email: email,\n      password: password\n    };\n    return this.http.post<any>(`${this.apiUrl}/register`, userData);\n  }\n  login(credentials: { email: string, password: string }) {\n    return this.http.post<any>(`${this.apiUrl}/login`, credentials);\n  }\n  getUserDetails() {\n    const token = localStorage.getItem('token');\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    });\n    return this.http.get<any>(`${this.apiUrl}/user-details`, { headers });\n  }\n  getUserRole(){\n      try {\n        const token = localStorage.getItem('token');\n        if(token){\n          let user:any = jwt_decode(token);\n          return user.userId ==\"64a2d72df4d3459907e02e14\" ? \"ADMIN\" :\"USER\" ;\n        }\n        return \"GUEST\";\n      } catch(Error) {\n        return \"GUEST\";\n      }\n  }\n  storeToken(token: string): void {\n    localStorage.setItem('token', token);\n  }\n  isLoggedIn():boolean{\n    return !!localStorage.getItem('token');\n  }\n  logout(){\n    localStorage.removeItem('token');\n  }\n  deleteUser(){\n    const token = localStorage.getItem('token');\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    });\n    return this.http.delete<any>(`${this.apiUrl}/delete-user/`, { headers });\n\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgxSplideModule } from 'ngx-splide';\nimport { FormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    FormsModule,\n    NgxSplideModule\n  ],\n  exports:[FormsModule]\n})\nexport class SharedModule { }\n","export const environment = {\n  // apiUrl : 'http://localhost:3000',\n  apiUrl :'https://bingeworthyapi.onrender.com'\n};\n\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["RouterModule","HomeComponent","routes","component","path","AppRoutingModule","forRoot","imports","i1","exports","NavigationEnd","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵproperty","ɵɵpureFunction0","_c0","ɵɵtemplate","AppComponent_nav_0_div_3_Template","AppComponent_nav_0_div_4_Template","AppComponent_nav_0_ul_5_Template","ɵɵclassProp","ctx_r0","showSearchbar","AppComponent","constructor","router","showNavBar","events","subscribe","event","console","log","url","isLoggedIn","logout","navigate","ɵɵdirectiveInject","Router","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","AppComponent_nav_0_Template","BrowserModule","BrowserAnimationsModule","FormsModule","ReactiveFormsModule","HashLocationStrategy","LocationStrategy","HttpClientModule","ContentModule","AppModule","bootstrap","provide","useClass","declarations","ɵɵlistener","ImageSliderComponent_div_8_Template_div_click_0_listener","restoredCtx","ɵɵrestoreView","_r4","slideIndex_r2","index","ctx_r3","ɵɵnextContext","ɵɵresetView","goToSlide","currentIndex","ImageSliderComponent","slides","getCurrentSlideUrl","goToPrevious","isFirstSlide","newIndex","length","goToNext","isLastSlide","slideIndex","inputs","ImageSliderComponent_Template","ImageSliderComponent_Template_div_click_2_listener","ImageSliderComponent_Template_div_click_4_listener","ImageSliderComponent_div_8_Template","ɵɵpureFunction1","ContentComponent","ContentSliderComponent","LoginComponent","SearchComponent","ContentRoutingModule","CommonModule","SharedModule","ContentSliderComponent_div_2_div_1_i_21_Template_i_click_0_listener","_r9","i_r4","ctx_r7","navTo","ContentSliderComponent_div_2_div_1_i_22_Template_i_click_0_listener","_r12","ctx_r10","ContentSliderComponent_div_2_div_1_i_21_Template","ContentSliderComponent_div_2_div_1_i_22_Template","x_r3","_id","poster","ɵɵsanitizeUrl","ɵɵtextInterpolate1","title","ɵɵpropertyInterpolate1","_c1","ctx_r2","totalCount","ContentSliderComponent_div_2_div_1_Template","ctx_r1","movies","apiService","pageNumber","shortNumber","currentPage","fetchMovies","getContent","perPage","page","data","contents","ngOnInit","document","addEventListener","key","topAny","reelsContainer","nativeElement","scrollTop","i","movieId","getElementById","scrollIntoView","behavior","block","inline","ApiService","viewQuery","ContentSliderComponent_Query","ContentSliderComponent_div_1_Template","ContentSliderComponent_div_2_Template","ɵɵtextInterpolate","genre_r7","tag_r9","ContentComponent_div_0_div_11_span_4_Template","movie","tags","ɵɵpipeBind2","releaseDate","actor_r10","profile","name","ContentComponent_div_0_button_17_Template_button_click_0_listener","_r14","i_r12","ctx_r13","toggleSeason","season_r11","number","ctx_r5","activeSeason","ctx_r15","description","ɵɵtextInterpolate2","ctx_r16","i_r18","episode_r17","ContentComponent_div_0_div_18_p_2_Template","ContentComponent_div_0_div_18_li_4_Template","ctx_r6","episodes","ContentComponent_div_0_span_7_Template","ContentComponent_div_0_div_11_Template","ContentComponent_div_0_div_12_Template","ContentComponent_div_0_div_14_Template","ContentComponent_div_0_button_17_Template","ContentComponent_div_0_div_18_Template","genres","plot","actors","seasons","route","expandedSeasons","isSeasonExpanded","season","includes","params","getMovieDetails","id","getContentById","ActivatedRoute","i2","ContentComponent_Template","ContentComponent_div_0_Template","HomeComponent_Template","authService","loginData","email","password","errorMessage","login","response","token","storeToken","error","AuthService","ɵɵtrustConstantResourceUrl","LoginComponent_Template","SearchComponent_Template","environment","http","apiUrl","createContent","content","post","queryParams","get","updateContent","put","deleteContent","delete","createActor","actor","getActorById","updateActor","deleteActor","ɵɵinject","HttpClient","factory","ɵfac","providedIn","HttpHeaders","jwt_decode","signUp","firstName","lastName","userData","credentials","getUserDetails","localStorage","getItem","headers","Authorization","getUserRole","user","userId","Error","setItem","removeItem","deleteUser","NgxSplideModule","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","catch","err"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}