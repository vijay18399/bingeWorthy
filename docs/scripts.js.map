{"version":3,"file":"scripts.js","mappings":"AAAA,4CAA4C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD;;AAE/P,8DAA8D,sEAAsE,8DAA8D,kDAAkD,iBAAiB,GAAG;;AAExQ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,gCAAgC,0CAA0C;AAC1E,UAAU;AACV;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT,OAAO;AACP;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,8DAA8D;AAC9D,OAAO,IAAI;AACX;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,sBAAsB,mBAAmB;AACzC;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,cAAc;AACd;AACA,cAAc;AACd;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBAAsB,SAAS;AAC/B;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,2CAA2C;;AAElD;AACA;AACA,QAAQ;AACR;AACA;;AAEA,sCAAsC;AACtC;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,CAAC","sources":["node_modules\\@splidejs\\splide\\dist\\js\\splide.js"],"sourcesContent":["function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\n/*!\n * Splide.js\n * Version  : 4.1.4\n * License  : MIT\n * Copyright: 2022 Naotoshi Fujita\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Splide = factory());\n})(this, function () {\n  'use strict';\n\n  var MEDIA_PREFERS_REDUCED_MOTION = \"(prefers-reduced-motion: reduce)\";\n  var CREATED = 1;\n  var MOUNTED = 2;\n  var IDLE = 3;\n  var MOVING = 4;\n  var SCROLLING = 5;\n  var DRAGGING = 6;\n  var DESTROYED = 7;\n  var STATES = {\n    CREATED: CREATED,\n    MOUNTED: MOUNTED,\n    IDLE: IDLE,\n    MOVING: MOVING,\n    SCROLLING: SCROLLING,\n    DRAGGING: DRAGGING,\n    DESTROYED: DESTROYED\n  };\n\n  function empty(array) {\n    array.length = 0;\n  }\n\n  function slice(arrayLike, start, end) {\n    return Array.prototype.slice.call(arrayLike, start, end);\n  }\n\n  function apply(func) {\n    return func.bind.apply(func, [null].concat(slice(arguments, 1)));\n  }\n\n  var nextTick = setTimeout;\n\n  var noop = function noop() {};\n\n  function raf(func) {\n    return requestAnimationFrame(func);\n  }\n\n  function typeOf(type, subject) {\n    return typeof subject === type;\n  }\n\n  function isObject(subject) {\n    return !isNull(subject) && typeOf(\"object\", subject);\n  }\n\n  var isArray = Array.isArray;\n  var isFunction = apply(typeOf, \"function\");\n  var isString = apply(typeOf, \"string\");\n  var isUndefined = apply(typeOf, \"undefined\");\n\n  function isNull(subject) {\n    return subject === null;\n  }\n\n  function isHTMLElement(subject) {\n    try {\n      return subject instanceof (subject.ownerDocument.defaultView || window).HTMLElement;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  function toArray(value) {\n    return isArray(value) ? value : [value];\n  }\n\n  function forEach(values, iteratee) {\n    toArray(values).forEach(iteratee);\n  }\n\n  function includes(array, value) {\n    return array.indexOf(value) > -1;\n  }\n\n  function push(array, items) {\n    array.push.apply(array, toArray(items));\n    return array;\n  }\n\n  function toggleClass(elm, classes, add) {\n    if (elm) {\n      forEach(classes, function (name) {\n        if (name) {\n          elm.classList[add ? \"add\" : \"remove\"](name);\n        }\n      });\n    }\n  }\n\n  function addClass(elm, classes) {\n    toggleClass(elm, isString(classes) ? classes.split(\" \") : classes, true);\n  }\n\n  function append(parent, children) {\n    forEach(children, parent.appendChild.bind(parent));\n  }\n\n  function before(nodes, ref) {\n    forEach(nodes, function (node) {\n      var parent = (ref || node).parentNode;\n\n      if (parent) {\n        parent.insertBefore(node, ref);\n      }\n    });\n  }\n\n  function matches(elm, selector) {\n    return isHTMLElement(elm) && (elm[\"msMatchesSelector\"] || elm.matches).call(elm, selector);\n  }\n\n  function children(parent, selector) {\n    var children2 = parent ? slice(parent.children) : [];\n    return selector ? children2.filter(function (child) {\n      return matches(child, selector);\n    }) : children2;\n  }\n\n  function child(parent, selector) {\n    return selector ? children(parent, selector)[0] : parent.firstElementChild;\n  }\n\n  var ownKeys = Object.keys;\n\n  function forOwn(object, iteratee, right) {\n    if (object) {\n      (right ? ownKeys(object).reverse() : ownKeys(object)).forEach(function (key) {\n        key !== \"__proto__\" && iteratee(object[key], key);\n      });\n    }\n\n    return object;\n  }\n\n  function assign(object) {\n    slice(arguments, 1).forEach(function (source) {\n      forOwn(source, function (value, key) {\n        object[key] = source[key];\n      });\n    });\n    return object;\n  }\n\n  function merge(object) {\n    slice(arguments, 1).forEach(function (source) {\n      forOwn(source, function (value, key) {\n        if (isArray(value)) {\n          object[key] = value.slice();\n        } else if (isObject(value)) {\n          object[key] = merge({}, isObject(object[key]) ? object[key] : {}, value);\n        } else {\n          object[key] = value;\n        }\n      });\n    });\n    return object;\n  }\n\n  function omit(object, keys) {\n    forEach(keys || ownKeys(object), function (key) {\n      delete object[key];\n    });\n  }\n\n  function removeAttribute(elms, attrs) {\n    forEach(elms, function (elm) {\n      forEach(attrs, function (attr) {\n        elm && elm.removeAttribute(attr);\n      });\n    });\n  }\n\n  function setAttribute(elms, attrs, value) {\n    if (isObject(attrs)) {\n      forOwn(attrs, function (value2, name) {\n        setAttribute(elms, name, value2);\n      });\n    } else {\n      forEach(elms, function (elm) {\n        isNull(value) || value === \"\" ? removeAttribute(elm, attrs) : elm.setAttribute(attrs, String(value));\n      });\n    }\n  }\n\n  function create(tag, attrs, parent) {\n    var elm = document.createElement(tag);\n\n    if (attrs) {\n      isString(attrs) ? addClass(elm, attrs) : setAttribute(elm, attrs);\n    }\n\n    parent && append(parent, elm);\n    return elm;\n  }\n\n  function style(elm, prop, value) {\n    if (isUndefined(value)) {\n      return getComputedStyle(elm)[prop];\n    }\n\n    if (!isNull(value)) {\n      elm.style[prop] = \"\" + value;\n    }\n  }\n\n  function display(elm, display2) {\n    style(elm, \"display\", display2);\n  }\n\n  function focus(elm) {\n    elm[\"setActive\"] && elm[\"setActive\"]() || elm.focus({\n      preventScroll: true\n    });\n  }\n\n  function getAttribute(elm, attr) {\n    return elm.getAttribute(attr);\n  }\n\n  function hasClass(elm, className) {\n    return elm && elm.classList.contains(className);\n  }\n\n  function rect(target) {\n    return target.getBoundingClientRect();\n  }\n\n  function remove(nodes) {\n    forEach(nodes, function (node) {\n      if (node && node.parentNode) {\n        node.parentNode.removeChild(node);\n      }\n    });\n  }\n\n  function parseHtml(html) {\n    return child(new DOMParser().parseFromString(html, \"text/html\").body);\n  }\n\n  function prevent(e, stopPropagation) {\n    e.preventDefault();\n\n    if (stopPropagation) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n\n  function query(parent, selector) {\n    return parent && parent.querySelector(selector);\n  }\n\n  function queryAll(parent, selector) {\n    return selector ? slice(parent.querySelectorAll(selector)) : [];\n  }\n\n  function removeClass(elm, classes) {\n    toggleClass(elm, classes, false);\n  }\n\n  function timeOf(e) {\n    return e.timeStamp;\n  }\n\n  function unit(value) {\n    return isString(value) ? value : value ? value + \"px\" : \"\";\n  }\n\n  var PROJECT_CODE = \"splide\";\n  var DATA_ATTRIBUTE = \"data-\" + PROJECT_CODE;\n\n  function assert(condition, message) {\n    if (!condition) {\n      throw new Error(\"[\" + PROJECT_CODE + \"] \" + (message || \"\"));\n    }\n  }\n\n  var min = Math.min,\n      max = Math.max,\n      floor = Math.floor,\n      ceil = Math.ceil,\n      abs = Math.abs;\n\n  function approximatelyEqual(x, y, epsilon) {\n    return abs(x - y) < epsilon;\n  }\n\n  function between(number, x, y, exclusive) {\n    var minimum = min(x, y);\n    var maximum = max(x, y);\n    return exclusive ? minimum < number && number < maximum : minimum <= number && number <= maximum;\n  }\n\n  function clamp(number, x, y) {\n    var minimum = min(x, y);\n    var maximum = max(x, y);\n    return min(max(minimum, number), maximum);\n  }\n\n  function sign(x) {\n    return +(x > 0) - +(x < 0);\n  }\n\n  function format(string, replacements) {\n    forEach(replacements, function (replacement) {\n      string = string.replace(\"%s\", \"\" + replacement);\n    });\n    return string;\n  }\n\n  function pad(number) {\n    return number < 10 ? \"0\" + number : \"\" + number;\n  }\n\n  var ids = {};\n\n  function uniqueId(prefix) {\n    return \"\" + prefix + pad(ids[prefix] = (ids[prefix] || 0) + 1);\n  }\n\n  function EventBinder() {\n    var listeners = [];\n\n    function bind(targets, events, callback, options) {\n      forEachEvent(targets, events, function (target, event, namespace) {\n        var isEventTarget = (\"addEventListener\" in target);\n        var remover = isEventTarget ? target.removeEventListener.bind(target, event, callback, options) : target[\"removeListener\"].bind(target, callback);\n        isEventTarget ? target.addEventListener(event, callback, options) : target[\"addListener\"](callback);\n        listeners.push([target, event, namespace, callback, remover]);\n      });\n    }\n\n    function unbind(targets, events, callback) {\n      forEachEvent(targets, events, function (target, event, namespace) {\n        listeners = listeners.filter(function (listener) {\n          if (listener[0] === target && listener[1] === event && listener[2] === namespace && (!callback || listener[3] === callback)) {\n            listener[4]();\n            return false;\n          }\n\n          return true;\n        });\n      });\n    }\n\n    function dispatch(target, type, detail) {\n      var e;\n      var bubbles = true;\n\n      if (typeof CustomEvent === \"function\") {\n        e = new CustomEvent(type, {\n          bubbles: bubbles,\n          detail: detail\n        });\n      } else {\n        e = document.createEvent(\"CustomEvent\");\n        e.initCustomEvent(type, bubbles, false, detail);\n      }\n\n      target.dispatchEvent(e);\n      return e;\n    }\n\n    function forEachEvent(targets, events, iteratee) {\n      forEach(targets, function (target) {\n        target && forEach(events, function (events2) {\n          events2.split(\" \").forEach(function (eventNS) {\n            var fragment = eventNS.split(\".\");\n            iteratee(target, fragment[0], fragment[1]);\n          });\n        });\n      });\n    }\n\n    function destroy() {\n      listeners.forEach(function (data) {\n        data[4]();\n      });\n      empty(listeners);\n    }\n\n    return {\n      bind: bind,\n      unbind: unbind,\n      dispatch: dispatch,\n      destroy: destroy\n    };\n  }\n\n  var EVENT_MOUNTED = \"mounted\";\n  var EVENT_READY = \"ready\";\n  var EVENT_MOVE = \"move\";\n  var EVENT_MOVED = \"moved\";\n  var EVENT_CLICK = \"click\";\n  var EVENT_ACTIVE = \"active\";\n  var EVENT_INACTIVE = \"inactive\";\n  var EVENT_VISIBLE = \"visible\";\n  var EVENT_HIDDEN = \"hidden\";\n  var EVENT_REFRESH = \"refresh\";\n  var EVENT_UPDATED = \"updated\";\n  var EVENT_RESIZE = \"resize\";\n  var EVENT_RESIZED = \"resized\";\n  var EVENT_DRAG = \"drag\";\n  var EVENT_DRAGGING = \"dragging\";\n  var EVENT_DRAGGED = \"dragged\";\n  var EVENT_SCROLL = \"scroll\";\n  var EVENT_SCROLLED = \"scrolled\";\n  var EVENT_OVERFLOW = \"overflow\";\n  var EVENT_DESTROY = \"destroy\";\n  var EVENT_ARROWS_MOUNTED = \"arrows:mounted\";\n  var EVENT_ARROWS_UPDATED = \"arrows:updated\";\n  var EVENT_PAGINATION_MOUNTED = \"pagination:mounted\";\n  var EVENT_PAGINATION_UPDATED = \"pagination:updated\";\n  var EVENT_NAVIGATION_MOUNTED = \"navigation:mounted\";\n  var EVENT_AUTOPLAY_PLAY = \"autoplay:play\";\n  var EVENT_AUTOPLAY_PLAYING = \"autoplay:playing\";\n  var EVENT_AUTOPLAY_PAUSE = \"autoplay:pause\";\n  var EVENT_LAZYLOAD_LOADED = \"lazyload:loaded\";\n  var EVENT_SLIDE_KEYDOWN = \"sk\";\n  var EVENT_SHIFTED = \"sh\";\n  var EVENT_END_INDEX_CHANGED = \"ei\";\n\n  function EventInterface(Splide2) {\n    var bus = Splide2 ? Splide2.event.bus : document.createDocumentFragment();\n    var binder = EventBinder();\n\n    function on(events, callback) {\n      binder.bind(bus, toArray(events).join(\" \"), function (e) {\n        callback.apply(callback, isArray(e.detail) ? e.detail : []);\n      });\n    }\n\n    function emit(event) {\n      binder.dispatch(bus, event, slice(arguments, 1));\n    }\n\n    if (Splide2) {\n      Splide2.event.on(EVENT_DESTROY, binder.destroy);\n    }\n\n    return assign(binder, {\n      bus: bus,\n      on: on,\n      off: apply(binder.unbind, bus),\n      emit: emit\n    });\n  }\n\n  function RequestInterval(interval, onInterval, onUpdate, limit) {\n    var now = Date.now;\n    var startTime;\n    var rate = 0;\n    var id;\n    var paused = true;\n    var count = 0;\n\n    function update() {\n      if (!paused) {\n        rate = interval ? min((now() - startTime) / interval, 1) : 1;\n        onUpdate && onUpdate(rate);\n\n        if (rate >= 1) {\n          onInterval();\n          startTime = now();\n\n          if (limit && ++count >= limit) {\n            return pause();\n          }\n        }\n\n        id = raf(update);\n      }\n    }\n\n    function start(resume) {\n      resume || cancel();\n      startTime = now() - (resume ? rate * interval : 0);\n      paused = false;\n      id = raf(update);\n    }\n\n    function pause() {\n      paused = true;\n    }\n\n    function rewind() {\n      startTime = now();\n      rate = 0;\n\n      if (onUpdate) {\n        onUpdate(rate);\n      }\n    }\n\n    function cancel() {\n      id && cancelAnimationFrame(id);\n      rate = 0;\n      id = 0;\n      paused = true;\n    }\n\n    function set(time) {\n      interval = time;\n    }\n\n    function isPaused() {\n      return paused;\n    }\n\n    return {\n      start: start,\n      rewind: rewind,\n      pause: pause,\n      cancel: cancel,\n      set: set,\n      isPaused: isPaused\n    };\n  }\n\n  function State(initialState) {\n    var state = initialState;\n\n    function set(value) {\n      state = value;\n    }\n\n    function is(states) {\n      return includes(toArray(states), state);\n    }\n\n    return {\n      set: set,\n      is: is\n    };\n  }\n\n  function Throttle(func, duration) {\n    var interval = RequestInterval(duration || 0, func, null, 1);\n    return function () {\n      interval.isPaused() && interval.start();\n    };\n  }\n\n  function Media(Splide2, Components2, options) {\n    var state = Splide2.state;\n    var breakpoints = options.breakpoints || {};\n    var reducedMotion = options.reducedMotion || {};\n    var binder = EventBinder();\n    var queries = [];\n\n    function setup() {\n      var isMin = options.mediaQuery === \"min\";\n      ownKeys(breakpoints).sort(function (n, m) {\n        return isMin ? +n - +m : +m - +n;\n      }).forEach(function (key) {\n        register(breakpoints[key], \"(\" + (isMin ? \"min\" : \"max\") + \"-width:\" + key + \"px)\");\n      });\n      register(reducedMotion, MEDIA_PREFERS_REDUCED_MOTION);\n      update();\n    }\n\n    function destroy(completely) {\n      if (completely) {\n        binder.destroy();\n      }\n    }\n\n    function register(options2, query) {\n      var queryList = matchMedia(query);\n      binder.bind(queryList, \"change\", update);\n      queries.push([options2, queryList]);\n    }\n\n    function update() {\n      var destroyed = state.is(DESTROYED);\n      var direction = options.direction;\n      var merged = queries.reduce(function (merged2, entry) {\n        return merge(merged2, entry[1].matches ? entry[0] : {});\n      }, {});\n      omit(options);\n      set(merged);\n\n      if (options.destroy) {\n        Splide2.destroy(options.destroy === \"completely\");\n      } else if (destroyed) {\n        destroy(true);\n        Splide2.mount();\n      } else {\n        direction !== options.direction && Splide2.refresh();\n      }\n    }\n\n    function reduce(enable) {\n      if (matchMedia(MEDIA_PREFERS_REDUCED_MOTION).matches) {\n        enable ? merge(options, reducedMotion) : omit(options, ownKeys(reducedMotion));\n      }\n    }\n\n    function set(opts, base, notify) {\n      merge(options, opts);\n      base && merge(Object.getPrototypeOf(options), opts);\n\n      if (notify || !state.is(CREATED)) {\n        Splide2.emit(EVENT_UPDATED, options);\n      }\n    }\n\n    return {\n      setup: setup,\n      destroy: destroy,\n      reduce: reduce,\n      set: set\n    };\n  }\n\n  var ARROW = \"Arrow\";\n  var ARROW_LEFT = ARROW + \"Left\";\n  var ARROW_RIGHT = ARROW + \"Right\";\n  var ARROW_UP = ARROW + \"Up\";\n  var ARROW_DOWN = ARROW + \"Down\";\n  var RTL = \"rtl\";\n  var TTB = \"ttb\";\n  var ORIENTATION_MAP = {\n    width: [\"height\"],\n    left: [\"top\", \"right\"],\n    right: [\"bottom\", \"left\"],\n    x: [\"y\"],\n    X: [\"Y\"],\n    Y: [\"X\"],\n    ArrowLeft: [ARROW_UP, ARROW_RIGHT],\n    ArrowRight: [ARROW_DOWN, ARROW_LEFT]\n  };\n\n  function Direction(Splide2, Components2, options) {\n    function resolve(prop, axisOnly, direction) {\n      direction = direction || options.direction;\n      var index = direction === RTL && !axisOnly ? 1 : direction === TTB ? 0 : -1;\n      return ORIENTATION_MAP[prop] && ORIENTATION_MAP[prop][index] || prop.replace(/width|left|right/i, function (match, offset) {\n        var replacement = ORIENTATION_MAP[match.toLowerCase()][index] || match;\n        return offset > 0 ? replacement.charAt(0).toUpperCase() + replacement.slice(1) : replacement;\n      });\n    }\n\n    function orient(value) {\n      return value * (options.direction === RTL ? 1 : -1);\n    }\n\n    return {\n      resolve: resolve,\n      orient: orient\n    };\n  }\n\n  var ROLE = \"role\";\n  var TAB_INDEX = \"tabindex\";\n  var DISABLED = \"disabled\";\n  var ARIA_PREFIX = \"aria-\";\n  var ARIA_CONTROLS = ARIA_PREFIX + \"controls\";\n  var ARIA_CURRENT = ARIA_PREFIX + \"current\";\n  var ARIA_SELECTED = ARIA_PREFIX + \"selected\";\n  var ARIA_LABEL = ARIA_PREFIX + \"label\";\n  var ARIA_LABELLEDBY = ARIA_PREFIX + \"labelledby\";\n  var ARIA_HIDDEN = ARIA_PREFIX + \"hidden\";\n  var ARIA_ORIENTATION = ARIA_PREFIX + \"orientation\";\n  var ARIA_ROLEDESCRIPTION = ARIA_PREFIX + \"roledescription\";\n  var ARIA_LIVE = ARIA_PREFIX + \"live\";\n  var ARIA_BUSY = ARIA_PREFIX + \"busy\";\n  var ARIA_ATOMIC = ARIA_PREFIX + \"atomic\";\n  var ALL_ATTRIBUTES = [ROLE, TAB_INDEX, DISABLED, ARIA_CONTROLS, ARIA_CURRENT, ARIA_LABEL, ARIA_LABELLEDBY, ARIA_HIDDEN, ARIA_ORIENTATION, ARIA_ROLEDESCRIPTION];\n  var CLASS_PREFIX = PROJECT_CODE + \"__\";\n  var STATUS_CLASS_PREFIX = \"is-\";\n  var CLASS_ROOT = PROJECT_CODE;\n  var CLASS_TRACK = CLASS_PREFIX + \"track\";\n  var CLASS_LIST = CLASS_PREFIX + \"list\";\n  var CLASS_SLIDE = CLASS_PREFIX + \"slide\";\n  var CLASS_CLONE = CLASS_SLIDE + \"--clone\";\n  var CLASS_CONTAINER = CLASS_SLIDE + \"__container\";\n  var CLASS_ARROWS = CLASS_PREFIX + \"arrows\";\n  var CLASS_ARROW = CLASS_PREFIX + \"arrow\";\n  var CLASS_ARROW_PREV = CLASS_ARROW + \"--prev\";\n  var CLASS_ARROW_NEXT = CLASS_ARROW + \"--next\";\n  var CLASS_PAGINATION = CLASS_PREFIX + \"pagination\";\n  var CLASS_PAGINATION_PAGE = CLASS_PAGINATION + \"__page\";\n  var CLASS_PROGRESS = CLASS_PREFIX + \"progress\";\n  var CLASS_PROGRESS_BAR = CLASS_PROGRESS + \"__bar\";\n  var CLASS_TOGGLE = CLASS_PREFIX + \"toggle\";\n  var CLASS_SPINNER = CLASS_PREFIX + \"spinner\";\n  var CLASS_SR = CLASS_PREFIX + \"sr\";\n  var CLASS_INITIALIZED = STATUS_CLASS_PREFIX + \"initialized\";\n  var CLASS_ACTIVE = STATUS_CLASS_PREFIX + \"active\";\n  var CLASS_PREV = STATUS_CLASS_PREFIX + \"prev\";\n  var CLASS_NEXT = STATUS_CLASS_PREFIX + \"next\";\n  var CLASS_VISIBLE = STATUS_CLASS_PREFIX + \"visible\";\n  var CLASS_LOADING = STATUS_CLASS_PREFIX + \"loading\";\n  var CLASS_FOCUS_IN = STATUS_CLASS_PREFIX + \"focus-in\";\n  var CLASS_OVERFLOW = STATUS_CLASS_PREFIX + \"overflow\";\n  var STATUS_CLASSES = [CLASS_ACTIVE, CLASS_VISIBLE, CLASS_PREV, CLASS_NEXT, CLASS_LOADING, CLASS_FOCUS_IN, CLASS_OVERFLOW];\n  var CLASSES = {\n    slide: CLASS_SLIDE,\n    clone: CLASS_CLONE,\n    arrows: CLASS_ARROWS,\n    arrow: CLASS_ARROW,\n    prev: CLASS_ARROW_PREV,\n    next: CLASS_ARROW_NEXT,\n    pagination: CLASS_PAGINATION,\n    page: CLASS_PAGINATION_PAGE,\n    spinner: CLASS_SPINNER\n  };\n\n  function closest(from, selector) {\n    if (isFunction(from.closest)) {\n      return from.closest(selector);\n    }\n\n    var elm = from;\n\n    while (elm && elm.nodeType === 1) {\n      if (matches(elm, selector)) {\n        break;\n      }\n\n      elm = elm.parentElement;\n    }\n\n    return elm;\n  }\n\n  var FRICTION = 5;\n  var LOG_INTERVAL = 200;\n  var POINTER_DOWN_EVENTS = \"touchstart mousedown\";\n  var POINTER_MOVE_EVENTS = \"touchmove mousemove\";\n  var POINTER_UP_EVENTS = \"touchend touchcancel mouseup click\";\n\n  function Elements(Splide2, Components2, options) {\n    var _EventInterface = EventInterface(Splide2),\n        on = _EventInterface.on,\n        bind = _EventInterface.bind;\n\n    var root = Splide2.root;\n    var i18n = options.i18n;\n    var elements = {};\n    var slides = [];\n    var rootClasses = [];\n    var trackClasses = [];\n    var track;\n    var list;\n    var isUsingKey;\n\n    function setup() {\n      collect();\n      init();\n      update();\n    }\n\n    function mount() {\n      on(EVENT_REFRESH, destroy);\n      on(EVENT_REFRESH, setup);\n      on(EVENT_UPDATED, update);\n      bind(document, POINTER_DOWN_EVENTS + \" keydown\", function (e) {\n        isUsingKey = e.type === \"keydown\";\n      }, {\n        capture: true\n      });\n      bind(root, \"focusin\", function () {\n        toggleClass(root, CLASS_FOCUS_IN, !!isUsingKey);\n      });\n    }\n\n    function destroy(completely) {\n      var attrs = ALL_ATTRIBUTES.concat(\"style\");\n      empty(slides);\n      removeClass(root, rootClasses);\n      removeClass(track, trackClasses);\n      removeAttribute([track, list], attrs);\n      removeAttribute(root, completely ? attrs : [\"style\", ARIA_ROLEDESCRIPTION]);\n    }\n\n    function update() {\n      removeClass(root, rootClasses);\n      removeClass(track, trackClasses);\n      rootClasses = getClasses(CLASS_ROOT);\n      trackClasses = getClasses(CLASS_TRACK);\n      addClass(root, rootClasses);\n      addClass(track, trackClasses);\n      setAttribute(root, ARIA_LABEL, options.label);\n      setAttribute(root, ARIA_LABELLEDBY, options.labelledby);\n    }\n\n    function collect() {\n      track = find(\".\" + CLASS_TRACK);\n      list = child(track, \".\" + CLASS_LIST);\n      assert(track && list, \"A track/list element is missing.\");\n      push(slides, children(list, \".\" + CLASS_SLIDE + \":not(.\" + CLASS_CLONE + \")\"));\n      forOwn({\n        arrows: CLASS_ARROWS,\n        pagination: CLASS_PAGINATION,\n        prev: CLASS_ARROW_PREV,\n        next: CLASS_ARROW_NEXT,\n        bar: CLASS_PROGRESS_BAR,\n        toggle: CLASS_TOGGLE\n      }, function (className, key) {\n        elements[key] = find(\".\" + className);\n      });\n      assign(elements, {\n        root: root,\n        track: track,\n        list: list,\n        slides: slides\n      });\n    }\n\n    function init() {\n      var id = root.id || uniqueId(PROJECT_CODE);\n      var role = options.role;\n      root.id = id;\n      track.id = track.id || id + \"-track\";\n      list.id = list.id || id + \"-list\";\n\n      if (!getAttribute(root, ROLE) && root.tagName !== \"SECTION\" && role) {\n        setAttribute(root, ROLE, role);\n      }\n\n      setAttribute(root, ARIA_ROLEDESCRIPTION, i18n.carousel);\n      setAttribute(list, ROLE, \"presentation\");\n    }\n\n    function find(selector) {\n      var elm = query(root, selector);\n      return elm && closest(elm, \".\" + CLASS_ROOT) === root ? elm : void 0;\n    }\n\n    function getClasses(base) {\n      return [base + \"--\" + options.type, base + \"--\" + options.direction, options.drag && base + \"--draggable\", options.isNavigation && base + \"--nav\", base === CLASS_ROOT && CLASS_ACTIVE];\n    }\n\n    return assign(elements, {\n      setup: setup,\n      mount: mount,\n      destroy: destroy\n    });\n  }\n\n  var SLIDE = \"slide\";\n  var LOOP = \"loop\";\n  var FADE = \"fade\";\n\n  function Slide$1(Splide2, index, slideIndex, slide) {\n    var event = EventInterface(Splide2);\n    var on = event.on,\n        emit = event.emit,\n        bind = event.bind;\n    var Components = Splide2.Components,\n        root = Splide2.root,\n        options = Splide2.options;\n    var isNavigation = options.isNavigation,\n        updateOnMove = options.updateOnMove,\n        i18n = options.i18n,\n        pagination = options.pagination,\n        slideFocus = options.slideFocus;\n    var resolve = Components.Direction.resolve;\n    var styles = getAttribute(slide, \"style\");\n    var label = getAttribute(slide, ARIA_LABEL);\n    var isClone = slideIndex > -1;\n    var container = child(slide, \".\" + CLASS_CONTAINER);\n    var destroyed;\n\n    function mount() {\n      if (!isClone) {\n        slide.id = root.id + \"-slide\" + pad(index + 1);\n        setAttribute(slide, ROLE, pagination ? \"tabpanel\" : \"group\");\n        setAttribute(slide, ARIA_ROLEDESCRIPTION, i18n.slide);\n        setAttribute(slide, ARIA_LABEL, label || format(i18n.slideLabel, [index + 1, Splide2.length]));\n      }\n\n      listen();\n    }\n\n    function listen() {\n      bind(slide, \"click\", apply(emit, EVENT_CLICK, self));\n      bind(slide, \"keydown\", apply(emit, EVENT_SLIDE_KEYDOWN, self));\n      on([EVENT_MOVED, EVENT_SHIFTED, EVENT_SCROLLED], update);\n      on(EVENT_NAVIGATION_MOUNTED, initNavigation);\n\n      if (updateOnMove) {\n        on(EVENT_MOVE, onMove);\n      }\n    }\n\n    function destroy() {\n      destroyed = true;\n      event.destroy();\n      removeClass(slide, STATUS_CLASSES);\n      removeAttribute(slide, ALL_ATTRIBUTES);\n      setAttribute(slide, \"style\", styles);\n      setAttribute(slide, ARIA_LABEL, label || \"\");\n    }\n\n    function initNavigation() {\n      var controls = Splide2.splides.map(function (target) {\n        var Slide2 = target.splide.Components.Slides.getAt(index);\n        return Slide2 ? Slide2.slide.id : \"\";\n      }).join(\" \");\n      setAttribute(slide, ARIA_LABEL, format(i18n.slideX, (isClone ? slideIndex : index) + 1));\n      setAttribute(slide, ARIA_CONTROLS, controls);\n      setAttribute(slide, ROLE, slideFocus ? \"button\" : \"\");\n      slideFocus && removeAttribute(slide, ARIA_ROLEDESCRIPTION);\n    }\n\n    function onMove() {\n      if (!destroyed) {\n        update();\n      }\n    }\n\n    function update() {\n      if (!destroyed) {\n        var curr = Splide2.index;\n        updateActivity();\n        updateVisibility();\n        toggleClass(slide, CLASS_PREV, index === curr - 1);\n        toggleClass(slide, CLASS_NEXT, index === curr + 1);\n      }\n    }\n\n    function updateActivity() {\n      var active = isActive();\n\n      if (active !== hasClass(slide, CLASS_ACTIVE)) {\n        toggleClass(slide, CLASS_ACTIVE, active);\n        setAttribute(slide, ARIA_CURRENT, isNavigation && active || \"\");\n        emit(active ? EVENT_ACTIVE : EVENT_INACTIVE, self);\n      }\n    }\n\n    function updateVisibility() {\n      var visible = isVisible();\n      var hidden = !visible && (!isActive() || isClone);\n\n      if (!Splide2.state.is([MOVING, SCROLLING])) {\n        setAttribute(slide, ARIA_HIDDEN, hidden || \"\");\n      }\n\n      setAttribute(queryAll(slide, options.focusableNodes || \"\"), TAB_INDEX, hidden ? -1 : \"\");\n\n      if (slideFocus) {\n        setAttribute(slide, TAB_INDEX, hidden ? -1 : 0);\n      }\n\n      if (visible !== hasClass(slide, CLASS_VISIBLE)) {\n        toggleClass(slide, CLASS_VISIBLE, visible);\n        emit(visible ? EVENT_VISIBLE : EVENT_HIDDEN, self);\n      }\n\n      if (!visible && document.activeElement === slide) {\n        var Slide2 = Components.Slides.getAt(Splide2.index);\n        Slide2 && focus(Slide2.slide);\n      }\n    }\n\n    function style$1(prop, value, useContainer) {\n      style(useContainer && container || slide, prop, value);\n    }\n\n    function isActive() {\n      var curr = Splide2.index;\n      return curr === index || options.cloneStatus && curr === slideIndex;\n    }\n\n    function isVisible() {\n      if (Splide2.is(FADE)) {\n        return isActive();\n      }\n\n      var trackRect = rect(Components.Elements.track);\n      var slideRect = rect(slide);\n      var left = resolve(\"left\", true);\n      var right = resolve(\"right\", true);\n      return floor(trackRect[left]) <= ceil(slideRect[left]) && floor(slideRect[right]) <= ceil(trackRect[right]);\n    }\n\n    function isWithin(from, distance) {\n      var diff = abs(from - index);\n\n      if (!isClone && (options.rewind || Splide2.is(LOOP))) {\n        diff = min(diff, Splide2.length - diff);\n      }\n\n      return diff <= distance;\n    }\n\n    var self = {\n      index: index,\n      slideIndex: slideIndex,\n      slide: slide,\n      container: container,\n      isClone: isClone,\n      mount: mount,\n      destroy: destroy,\n      update: update,\n      style: style$1,\n      isWithin: isWithin\n    };\n    return self;\n  }\n\n  function Slides(Splide2, Components2, options) {\n    var _EventInterface2 = EventInterface(Splide2),\n        on = _EventInterface2.on,\n        emit = _EventInterface2.emit,\n        bind = _EventInterface2.bind;\n\n    var _Components2$Elements = Components2.Elements,\n        slides = _Components2$Elements.slides,\n        list = _Components2$Elements.list;\n    var Slides2 = [];\n\n    function mount() {\n      init();\n      on(EVENT_REFRESH, destroy);\n      on(EVENT_REFRESH, init);\n    }\n\n    function init() {\n      slides.forEach(function (slide, index) {\n        register(slide, index, -1);\n      });\n    }\n\n    function destroy() {\n      forEach$1(function (Slide2) {\n        Slide2.destroy();\n      });\n      empty(Slides2);\n    }\n\n    function update() {\n      forEach$1(function (Slide2) {\n        Slide2.update();\n      });\n    }\n\n    function register(slide, index, slideIndex) {\n      var object = Slide$1(Splide2, index, slideIndex, slide);\n      object.mount();\n      Slides2.push(object);\n      Slides2.sort(function (Slide1, Slide2) {\n        return Slide1.index - Slide2.index;\n      });\n    }\n\n    function get(excludeClones) {\n      return excludeClones ? filter(function (Slide2) {\n        return !Slide2.isClone;\n      }) : Slides2;\n    }\n\n    function getIn(page) {\n      var Controller = Components2.Controller;\n      var index = Controller.toIndex(page);\n      var max = Controller.hasFocus() ? 1 : options.perPage;\n      return filter(function (Slide2) {\n        return between(Slide2.index, index, index + max - 1);\n      });\n    }\n\n    function getAt(index) {\n      return filter(index)[0];\n    }\n\n    function add(items, index) {\n      forEach(items, function (slide) {\n        if (isString(slide)) {\n          slide = parseHtml(slide);\n        }\n\n        if (isHTMLElement(slide)) {\n          var ref = slides[index];\n          ref ? before(slide, ref) : append(list, slide);\n          addClass(slide, options.classes.slide);\n          observeImages(slide, apply(emit, EVENT_RESIZE));\n        }\n      });\n      emit(EVENT_REFRESH);\n    }\n\n    function remove$1(matcher) {\n      remove(filter(matcher).map(function (Slide2) {\n        return Slide2.slide;\n      }));\n      emit(EVENT_REFRESH);\n    }\n\n    function forEach$1(iteratee, excludeClones) {\n      get(excludeClones).forEach(iteratee);\n    }\n\n    function filter(matcher) {\n      return Slides2.filter(isFunction(matcher) ? matcher : function (Slide2) {\n        return isString(matcher) ? matches(Slide2.slide, matcher) : includes(toArray(matcher), Slide2.index);\n      });\n    }\n\n    function style(prop, value, useContainer) {\n      forEach$1(function (Slide2) {\n        Slide2.style(prop, value, useContainer);\n      });\n    }\n\n    function observeImages(elm, callback) {\n      var images = queryAll(elm, \"img\");\n      var length = images.length;\n\n      if (length) {\n        images.forEach(function (img) {\n          bind(img, \"load error\", function () {\n            if (! --length) {\n              callback();\n            }\n          });\n        });\n      } else {\n        callback();\n      }\n    }\n\n    function getLength(excludeClones) {\n      return excludeClones ? slides.length : Slides2.length;\n    }\n\n    function isEnough() {\n      return Slides2.length > options.perPage;\n    }\n\n    return {\n      mount: mount,\n      destroy: destroy,\n      update: update,\n      register: register,\n      get: get,\n      getIn: getIn,\n      getAt: getAt,\n      add: add,\n      remove: remove$1,\n      forEach: forEach$1,\n      filter: filter,\n      style: style,\n      getLength: getLength,\n      isEnough: isEnough\n    };\n  }\n\n  function Layout(Splide2, Components2, options) {\n    var _EventInterface3 = EventInterface(Splide2),\n        on = _EventInterface3.on,\n        bind = _EventInterface3.bind,\n        emit = _EventInterface3.emit;\n\n    var Slides = Components2.Slides;\n    var resolve = Components2.Direction.resolve;\n    var _Components2$Elements2 = Components2.Elements,\n        root = _Components2$Elements2.root,\n        track = _Components2$Elements2.track,\n        list = _Components2$Elements2.list;\n    var getAt = Slides.getAt,\n        styleSlides = Slides.style;\n    var vertical;\n    var rootRect;\n    var overflow;\n\n    function mount() {\n      init();\n      bind(window, \"resize load\", Throttle(apply(emit, EVENT_RESIZE)));\n      on([EVENT_UPDATED, EVENT_REFRESH], init);\n      on(EVENT_RESIZE, resize);\n    }\n\n    function init() {\n      vertical = options.direction === TTB;\n      style(root, \"maxWidth\", unit(options.width));\n      style(track, resolve(\"paddingLeft\"), cssPadding(false));\n      style(track, resolve(\"paddingRight\"), cssPadding(true));\n      resize(true);\n    }\n\n    function resize(force) {\n      var newRect = rect(root);\n\n      if (force || rootRect.width !== newRect.width || rootRect.height !== newRect.height) {\n        style(track, \"height\", cssTrackHeight());\n        styleSlides(resolve(\"marginRight\"), unit(options.gap));\n        styleSlides(\"width\", cssSlideWidth());\n        styleSlides(\"height\", cssSlideHeight(), true);\n        rootRect = newRect;\n        emit(EVENT_RESIZED);\n\n        if (overflow !== (overflow = isOverflow())) {\n          toggleClass(root, CLASS_OVERFLOW, overflow);\n          emit(EVENT_OVERFLOW, overflow);\n        }\n      }\n    }\n\n    function cssPadding(right) {\n      var padding = options.padding;\n      var prop = resolve(right ? \"right\" : \"left\");\n      return padding && unit(padding[prop] || (isObject(padding) ? 0 : padding)) || \"0px\";\n    }\n\n    function cssTrackHeight() {\n      var height = \"\";\n\n      if (vertical) {\n        height = cssHeight();\n        assert(height, \"height or heightRatio is missing.\");\n        height = \"calc(\" + height + \" - \" + cssPadding(false) + \" - \" + cssPadding(true) + \")\";\n      }\n\n      return height;\n    }\n\n    function cssHeight() {\n      return unit(options.height || rect(list).width * options.heightRatio);\n    }\n\n    function cssSlideWidth() {\n      return options.autoWidth ? null : unit(options.fixedWidth) || (vertical ? \"\" : cssSlideSize());\n    }\n\n    function cssSlideHeight() {\n      return unit(options.fixedHeight) || (vertical ? options.autoHeight ? null : cssSlideSize() : cssHeight());\n    }\n\n    function cssSlideSize() {\n      var gap = unit(options.gap);\n      return \"calc((100%\" + (gap && \" + \" + gap) + \")/\" + (options.perPage || 1) + (gap && \" - \" + gap) + \")\";\n    }\n\n    function listSize() {\n      return rect(list)[resolve(\"width\")];\n    }\n\n    function slideSize(index, withoutGap) {\n      var Slide = getAt(index || 0);\n      return Slide ? rect(Slide.slide)[resolve(\"width\")] + (withoutGap ? 0 : getGap()) : 0;\n    }\n\n    function totalSize(index, withoutGap) {\n      var Slide = getAt(index);\n\n      if (Slide) {\n        var right = rect(Slide.slide)[resolve(\"right\")];\n        var left = rect(list)[resolve(\"left\")];\n        return abs(right - left) + (withoutGap ? 0 : getGap());\n      }\n\n      return 0;\n    }\n\n    function sliderSize(withoutGap) {\n      return totalSize(Splide2.length - 1) - totalSize(0) + slideSize(0, withoutGap);\n    }\n\n    function getGap() {\n      var Slide = getAt(0);\n      return Slide && parseFloat(style(Slide.slide, resolve(\"marginRight\"))) || 0;\n    }\n\n    function getPadding(right) {\n      return parseFloat(style(track, resolve(\"padding\" + (right ? \"Right\" : \"Left\")))) || 0;\n    }\n\n    function isOverflow() {\n      return Splide2.is(FADE) || sliderSize(true) > listSize();\n    }\n\n    return {\n      mount: mount,\n      resize: resize,\n      listSize: listSize,\n      slideSize: slideSize,\n      sliderSize: sliderSize,\n      totalSize: totalSize,\n      getPadding: getPadding,\n      isOverflow: isOverflow\n    };\n  }\n\n  var MULTIPLIER = 2;\n\n  function Clones(Splide2, Components2, options) {\n    var event = EventInterface(Splide2);\n    var on = event.on;\n    var Elements = Components2.Elements,\n        Slides = Components2.Slides;\n    var resolve = Components2.Direction.resolve;\n    var clones = [];\n    var cloneCount;\n\n    function mount() {\n      on(EVENT_REFRESH, remount);\n      on([EVENT_UPDATED, EVENT_RESIZE], observe);\n\n      if (cloneCount = computeCloneCount()) {\n        generate(cloneCount);\n        Components2.Layout.resize(true);\n      }\n    }\n\n    function remount() {\n      destroy();\n      mount();\n    }\n\n    function destroy() {\n      remove(clones);\n      empty(clones);\n      event.destroy();\n    }\n\n    function observe() {\n      var count = computeCloneCount();\n\n      if (cloneCount !== count) {\n        if (cloneCount < count || !count) {\n          event.emit(EVENT_REFRESH);\n        }\n      }\n    }\n\n    function generate(count) {\n      var slides = Slides.get().slice();\n      var length = slides.length;\n\n      if (length) {\n        while (slides.length < count) {\n          push(slides, slides);\n        }\n\n        push(slides.slice(-count), slides.slice(0, count)).forEach(function (Slide, index) {\n          var isHead = index < count;\n          var clone = cloneDeep(Slide.slide, index);\n          isHead ? before(clone, slides[0].slide) : append(Elements.list, clone);\n          push(clones, clone);\n          Slides.register(clone, index - count + (isHead ? 0 : length), Slide.index);\n        });\n      }\n    }\n\n    function cloneDeep(elm, index) {\n      var clone = elm.cloneNode(true);\n      addClass(clone, options.classes.clone);\n      clone.id = Splide2.root.id + \"-clone\" + pad(index + 1);\n      return clone;\n    }\n\n    function computeCloneCount() {\n      var clones2 = options.clones;\n\n      if (!Splide2.is(LOOP)) {\n        clones2 = 0;\n      } else if (isUndefined(clones2)) {\n        var fixedSize = options[resolve(\"fixedWidth\")] && Components2.Layout.slideSize(0);\n        var fixedCount = fixedSize && ceil(rect(Elements.track)[resolve(\"width\")] / fixedSize);\n        clones2 = fixedCount || options[resolve(\"autoWidth\")] && Splide2.length || options.perPage * MULTIPLIER;\n      }\n\n      return clones2;\n    }\n\n    return {\n      mount: mount,\n      destroy: destroy\n    };\n  }\n\n  function Move(Splide2, Components2, options) {\n    var _EventInterface4 = EventInterface(Splide2),\n        on = _EventInterface4.on,\n        emit = _EventInterface4.emit;\n\n    var set = Splide2.state.set;\n    var _Components2$Layout = Components2.Layout,\n        slideSize = _Components2$Layout.slideSize,\n        getPadding = _Components2$Layout.getPadding,\n        totalSize = _Components2$Layout.totalSize,\n        listSize = _Components2$Layout.listSize,\n        sliderSize = _Components2$Layout.sliderSize;\n    var _Components2$Directio = Components2.Direction,\n        resolve = _Components2$Directio.resolve,\n        orient = _Components2$Directio.orient;\n    var _Components2$Elements3 = Components2.Elements,\n        list = _Components2$Elements3.list,\n        track = _Components2$Elements3.track;\n    var Transition;\n\n    function mount() {\n      Transition = Components2.Transition;\n      on([EVENT_MOUNTED, EVENT_RESIZED, EVENT_UPDATED, EVENT_REFRESH], reposition);\n    }\n\n    function reposition() {\n      if (!Components2.Controller.isBusy()) {\n        Components2.Scroll.cancel();\n        jump(Splide2.index);\n        Components2.Slides.update();\n      }\n    }\n\n    function move(dest, index, prev, callback) {\n      if (dest !== index && canShift(dest > prev)) {\n        cancel();\n        translate(shift(getPosition(), dest > prev), true);\n      }\n\n      set(MOVING);\n      emit(EVENT_MOVE, index, prev, dest);\n      Transition.start(index, function () {\n        set(IDLE);\n        emit(EVENT_MOVED, index, prev, dest);\n        callback && callback();\n      });\n    }\n\n    function jump(index) {\n      translate(toPosition(index, true));\n    }\n\n    function translate(position, preventLoop) {\n      if (!Splide2.is(FADE)) {\n        var destination = preventLoop ? position : loop(position);\n        style(list, \"transform\", \"translate\" + resolve(\"X\") + \"(\" + destination + \"px)\");\n        position !== destination && emit(EVENT_SHIFTED);\n      }\n    }\n\n    function loop(position) {\n      if (Splide2.is(LOOP)) {\n        var index = toIndex(position);\n        var exceededMax = index > Components2.Controller.getEnd();\n        var exceededMin = index < 0;\n\n        if (exceededMin || exceededMax) {\n          position = shift(position, exceededMax);\n        }\n      }\n\n      return position;\n    }\n\n    function shift(position, backwards) {\n      var excess = position - getLimit(backwards);\n      var size = sliderSize();\n      position -= orient(size * (ceil(abs(excess) / size) || 1)) * (backwards ? 1 : -1);\n      return position;\n    }\n\n    function cancel() {\n      translate(getPosition(), true);\n      Transition.cancel();\n    }\n\n    function toIndex(position) {\n      var Slides = Components2.Slides.get();\n      var index = 0;\n      var minDistance = Infinity;\n\n      for (var i = 0; i < Slides.length; i++) {\n        var slideIndex = Slides[i].index;\n        var distance = abs(toPosition(slideIndex, true) - position);\n\n        if (distance <= minDistance) {\n          minDistance = distance;\n          index = slideIndex;\n        } else {\n          break;\n        }\n      }\n\n      return index;\n    }\n\n    function toPosition(index, trimming) {\n      var position = orient(totalSize(index - 1) - offset(index));\n      return trimming ? trim(position) : position;\n    }\n\n    function getPosition() {\n      var left = resolve(\"left\");\n      return rect(list)[left] - rect(track)[left] + orient(getPadding(false));\n    }\n\n    function trim(position) {\n      if (options.trimSpace && Splide2.is(SLIDE)) {\n        position = clamp(position, 0, orient(sliderSize(true) - listSize()));\n      }\n\n      return position;\n    }\n\n    function offset(index) {\n      var focus = options.focus;\n      return focus === \"center\" ? (listSize() - slideSize(index, true)) / 2 : +focus * slideSize(index) || 0;\n    }\n\n    function getLimit(max) {\n      return toPosition(max ? Components2.Controller.getEnd() : 0, !!options.trimSpace);\n    }\n\n    function canShift(backwards) {\n      var shifted = orient(shift(getPosition(), backwards));\n      return backwards ? shifted >= 0 : shifted <= list[resolve(\"scrollWidth\")] - rect(track)[resolve(\"width\")];\n    }\n\n    function exceededLimit(max, position) {\n      position = isUndefined(position) ? getPosition() : position;\n      var exceededMin = max !== true && orient(position) < orient(getLimit(false));\n      var exceededMax = max !== false && orient(position) > orient(getLimit(true));\n      return exceededMin || exceededMax;\n    }\n\n    return {\n      mount: mount,\n      move: move,\n      jump: jump,\n      translate: translate,\n      shift: shift,\n      cancel: cancel,\n      toIndex: toIndex,\n      toPosition: toPosition,\n      getPosition: getPosition,\n      getLimit: getLimit,\n      exceededLimit: exceededLimit,\n      reposition: reposition\n    };\n  }\n\n  function Controller(Splide2, Components2, options) {\n    var _EventInterface5 = EventInterface(Splide2),\n        on = _EventInterface5.on,\n        emit = _EventInterface5.emit;\n\n    var Move = Components2.Move;\n    var getPosition = Move.getPosition,\n        getLimit = Move.getLimit,\n        toPosition = Move.toPosition;\n    var _Components2$Slides = Components2.Slides,\n        isEnough = _Components2$Slides.isEnough,\n        getLength = _Components2$Slides.getLength;\n    var omitEnd = options.omitEnd;\n    var isLoop = Splide2.is(LOOP);\n    var isSlide = Splide2.is(SLIDE);\n    var getNext = apply(getAdjacent, false);\n    var getPrev = apply(getAdjacent, true);\n    var currIndex = options.start || 0;\n    var endIndex;\n    var prevIndex = currIndex;\n    var slideCount;\n    var perMove;\n    var perPage;\n\n    function mount() {\n      init();\n      on([EVENT_UPDATED, EVENT_REFRESH, EVENT_END_INDEX_CHANGED], init);\n      on(EVENT_RESIZED, onResized);\n    }\n\n    function init() {\n      slideCount = getLength(true);\n      perMove = options.perMove;\n      perPage = options.perPage;\n      endIndex = getEnd();\n      var index = clamp(currIndex, 0, omitEnd ? endIndex : slideCount - 1);\n\n      if (index !== currIndex) {\n        currIndex = index;\n        Move.reposition();\n      }\n    }\n\n    function onResized() {\n      if (endIndex !== getEnd()) {\n        emit(EVENT_END_INDEX_CHANGED);\n      }\n    }\n\n    function go(control, allowSameIndex, callback) {\n      if (!isBusy()) {\n        var dest = parse(control);\n        var index = loop(dest);\n\n        if (index > -1 && (allowSameIndex || index !== currIndex)) {\n          setIndex(index);\n          Move.move(dest, index, prevIndex, callback);\n        }\n      }\n    }\n\n    function scroll(destination, duration, snap, callback) {\n      Components2.Scroll.scroll(destination, duration, snap, function () {\n        var index = loop(Move.toIndex(getPosition()));\n        setIndex(omitEnd ? min(index, endIndex) : index);\n        callback && callback();\n      });\n    }\n\n    function parse(control) {\n      var index = currIndex;\n\n      if (isString(control)) {\n        var _ref = control.match(/([+\\-<>])(\\d+)?/) || [],\n            indicator = _ref[1],\n            number = _ref[2];\n\n        if (indicator === \"+\" || indicator === \"-\") {\n          index = computeDestIndex(currIndex + +(\"\" + indicator + (+number || 1)), currIndex);\n        } else if (indicator === \">\") {\n          index = number ? toIndex(+number) : getNext(true);\n        } else if (indicator === \"<\") {\n          index = getPrev(true);\n        }\n      } else {\n        index = isLoop ? control : clamp(control, 0, endIndex);\n      }\n\n      return index;\n    }\n\n    function getAdjacent(prev, destination) {\n      var number = perMove || (hasFocus() ? 1 : perPage);\n      var dest = computeDestIndex(currIndex + number * (prev ? -1 : 1), currIndex, !(perMove || hasFocus()));\n\n      if (dest === -1 && isSlide) {\n        if (!approximatelyEqual(getPosition(), getLimit(!prev), 1)) {\n          return prev ? 0 : endIndex;\n        }\n      }\n\n      return destination ? dest : loop(dest);\n    }\n\n    function computeDestIndex(dest, from, snapPage) {\n      if (isEnough() || hasFocus()) {\n        var index = computeMovableDestIndex(dest);\n\n        if (index !== dest) {\n          from = dest;\n          dest = index;\n          snapPage = false;\n        }\n\n        if (dest < 0 || dest > endIndex) {\n          if (!perMove && (between(0, dest, from, true) || between(endIndex, from, dest, true))) {\n            dest = toIndex(toPage(dest));\n          } else {\n            if (isLoop) {\n              dest = snapPage ? dest < 0 ? -(slideCount % perPage || perPage) : slideCount : dest;\n            } else if (options.rewind) {\n              dest = dest < 0 ? endIndex : 0;\n            } else {\n              dest = -1;\n            }\n          }\n        } else {\n          if (snapPage && dest !== from) {\n            dest = toIndex(toPage(from) + (dest < from ? -1 : 1));\n          }\n        }\n      } else {\n        dest = -1;\n      }\n\n      return dest;\n    }\n\n    function computeMovableDestIndex(dest) {\n      if (isSlide && options.trimSpace === \"move\" && dest !== currIndex) {\n        var position = getPosition();\n\n        while (position === toPosition(dest, true) && between(dest, 0, Splide2.length - 1, !options.rewind)) {\n          dest < currIndex ? --dest : ++dest;\n        }\n      }\n\n      return dest;\n    }\n\n    function loop(index) {\n      return isLoop ? (index + slideCount) % slideCount || 0 : index;\n    }\n\n    function getEnd() {\n      var end = slideCount - (hasFocus() || isLoop && perMove ? 1 : perPage);\n\n      while (omitEnd && end-- > 0) {\n        if (toPosition(slideCount - 1, true) !== toPosition(end, true)) {\n          end++;\n          break;\n        }\n      }\n\n      return clamp(end, 0, slideCount - 1);\n    }\n\n    function toIndex(page) {\n      return clamp(hasFocus() ? page : perPage * page, 0, endIndex);\n    }\n\n    function toPage(index) {\n      return hasFocus() ? min(index, endIndex) : floor((index >= endIndex ? slideCount - 1 : index) / perPage);\n    }\n\n    function toDest(destination) {\n      var closest = Move.toIndex(destination);\n      return isSlide ? clamp(closest, 0, endIndex) : closest;\n    }\n\n    function setIndex(index) {\n      if (index !== currIndex) {\n        prevIndex = currIndex;\n        currIndex = index;\n      }\n    }\n\n    function getIndex(prev) {\n      return prev ? prevIndex : currIndex;\n    }\n\n    function hasFocus() {\n      return !isUndefined(options.focus) || options.isNavigation;\n    }\n\n    function isBusy() {\n      return Splide2.state.is([MOVING, SCROLLING]) && !!options.waitForTransition;\n    }\n\n    return {\n      mount: mount,\n      go: go,\n      scroll: scroll,\n      getNext: getNext,\n      getPrev: getPrev,\n      getAdjacent: getAdjacent,\n      getEnd: getEnd,\n      setIndex: setIndex,\n      getIndex: getIndex,\n      toIndex: toIndex,\n      toPage: toPage,\n      toDest: toDest,\n      hasFocus: hasFocus,\n      isBusy: isBusy\n    };\n  }\n\n  var XML_NAME_SPACE = \"http://www.w3.org/2000/svg\";\n  var PATH = \"m15.5 0.932-4.3 4.38 14.5 14.6-14.5 14.5 4.3 4.4 14.6-14.6 4.4-4.3-4.4-4.4-14.6-14.6z\";\n  var SIZE = 40;\n\n  function Arrows(Splide2, Components2, options) {\n    var event = EventInterface(Splide2);\n    var on = event.on,\n        bind = event.bind,\n        emit = event.emit;\n    var classes = options.classes,\n        i18n = options.i18n;\n    var Elements = Components2.Elements,\n        Controller = Components2.Controller;\n    var placeholder = Elements.arrows,\n        track = Elements.track;\n    var wrapper = placeholder;\n    var prev = Elements.prev;\n    var next = Elements.next;\n    var created;\n    var wrapperClasses;\n    var arrows = {};\n\n    function mount() {\n      init();\n      on(EVENT_UPDATED, remount);\n    }\n\n    function remount() {\n      destroy();\n      mount();\n    }\n\n    function init() {\n      var enabled = options.arrows;\n\n      if (enabled && !(prev && next)) {\n        createArrows();\n      }\n\n      if (prev && next) {\n        assign(arrows, {\n          prev: prev,\n          next: next\n        });\n        display(wrapper, enabled ? \"\" : \"none\");\n        addClass(wrapper, wrapperClasses = CLASS_ARROWS + \"--\" + options.direction);\n\n        if (enabled) {\n          listen();\n          update();\n          setAttribute([prev, next], ARIA_CONTROLS, track.id);\n          emit(EVENT_ARROWS_MOUNTED, prev, next);\n        }\n      }\n    }\n\n    function destroy() {\n      event.destroy();\n      removeClass(wrapper, wrapperClasses);\n\n      if (created) {\n        remove(placeholder ? [prev, next] : wrapper);\n        prev = next = null;\n      } else {\n        removeAttribute([prev, next], ALL_ATTRIBUTES);\n      }\n    }\n\n    function listen() {\n      on([EVENT_MOUNTED, EVENT_MOVED, EVENT_REFRESH, EVENT_SCROLLED, EVENT_END_INDEX_CHANGED], update);\n      bind(next, \"click\", apply(go, \">\"));\n      bind(prev, \"click\", apply(go, \"<\"));\n    }\n\n    function go(control) {\n      Controller.go(control, true);\n    }\n\n    function createArrows() {\n      wrapper = placeholder || create(\"div\", classes.arrows);\n      prev = createArrow(true);\n      next = createArrow(false);\n      created = true;\n      append(wrapper, [prev, next]);\n      !placeholder && before(wrapper, track);\n    }\n\n    function createArrow(prev2) {\n      var arrow = \"<button class=\\\"\" + classes.arrow + \" \" + (prev2 ? classes.prev : classes.next) + \"\\\" type=\\\"button\\\"><svg xmlns=\\\"\" + XML_NAME_SPACE + \"\\\" viewBox=\\\"0 0 \" + SIZE + \" \" + SIZE + \"\\\" width=\\\"\" + SIZE + \"\\\" height=\\\"\" + SIZE + \"\\\" focusable=\\\"false\\\"><path d=\\\"\" + (options.arrowPath || PATH) + \"\\\" />\";\n      return parseHtml(arrow);\n    }\n\n    function update() {\n      if (prev && next) {\n        var index = Splide2.index;\n        var prevIndex = Controller.getPrev();\n        var nextIndex = Controller.getNext();\n        var prevLabel = prevIndex > -1 && index < prevIndex ? i18n.last : i18n.prev;\n        var nextLabel = nextIndex > -1 && index > nextIndex ? i18n.first : i18n.next;\n        prev.disabled = prevIndex < 0;\n        next.disabled = nextIndex < 0;\n        setAttribute(prev, ARIA_LABEL, prevLabel);\n        setAttribute(next, ARIA_LABEL, nextLabel);\n        emit(EVENT_ARROWS_UPDATED, prev, next, prevIndex, nextIndex);\n      }\n    }\n\n    return {\n      arrows: arrows,\n      mount: mount,\n      destroy: destroy,\n      update: update\n    };\n  }\n\n  var INTERVAL_DATA_ATTRIBUTE = DATA_ATTRIBUTE + \"-interval\";\n\n  function Autoplay(Splide2, Components2, options) {\n    var _EventInterface6 = EventInterface(Splide2),\n        on = _EventInterface6.on,\n        bind = _EventInterface6.bind,\n        emit = _EventInterface6.emit;\n\n    var interval = RequestInterval(options.interval, Splide2.go.bind(Splide2, \">\"), onAnimationFrame);\n    var isPaused = interval.isPaused;\n    var Elements = Components2.Elements,\n        _Components2$Elements4 = Components2.Elements,\n        root = _Components2$Elements4.root,\n        toggle = _Components2$Elements4.toggle;\n    var autoplay = options.autoplay;\n    var hovered;\n    var focused;\n    var stopped = autoplay === \"pause\";\n\n    function mount() {\n      if (autoplay) {\n        listen();\n        toggle && setAttribute(toggle, ARIA_CONTROLS, Elements.track.id);\n        stopped || play();\n        update();\n      }\n    }\n\n    function listen() {\n      if (options.pauseOnHover) {\n        bind(root, \"mouseenter mouseleave\", function (e) {\n          hovered = e.type === \"mouseenter\";\n          autoToggle();\n        });\n      }\n\n      if (options.pauseOnFocus) {\n        bind(root, \"focusin focusout\", function (e) {\n          focused = e.type === \"focusin\";\n          autoToggle();\n        });\n      }\n\n      if (toggle) {\n        bind(toggle, \"click\", function () {\n          stopped ? play() : pause(true);\n        });\n      }\n\n      on([EVENT_MOVE, EVENT_SCROLL, EVENT_REFRESH], interval.rewind);\n      on(EVENT_MOVE, onMove);\n    }\n\n    function play() {\n      if (isPaused() && Components2.Slides.isEnough()) {\n        interval.start(!options.resetProgress);\n        focused = hovered = stopped = false;\n        update();\n        emit(EVENT_AUTOPLAY_PLAY);\n      }\n    }\n\n    function pause(stop) {\n      if (stop === void 0) {\n        stop = true;\n      }\n\n      stopped = !!stop;\n      update();\n\n      if (!isPaused()) {\n        interval.pause();\n        emit(EVENT_AUTOPLAY_PAUSE);\n      }\n    }\n\n    function autoToggle() {\n      if (!stopped) {\n        hovered || focused ? pause(false) : play();\n      }\n    }\n\n    function update() {\n      if (toggle) {\n        toggleClass(toggle, CLASS_ACTIVE, !stopped);\n        setAttribute(toggle, ARIA_LABEL, options.i18n[stopped ? \"play\" : \"pause\"]);\n      }\n    }\n\n    function onAnimationFrame(rate) {\n      var bar = Elements.bar;\n      bar && style(bar, \"width\", rate * 100 + \"%\");\n      emit(EVENT_AUTOPLAY_PLAYING, rate);\n    }\n\n    function onMove(index) {\n      var Slide = Components2.Slides.getAt(index);\n      interval.set(Slide && +getAttribute(Slide.slide, INTERVAL_DATA_ATTRIBUTE) || options.interval);\n    }\n\n    return {\n      mount: mount,\n      destroy: interval.cancel,\n      play: play,\n      pause: pause,\n      isPaused: isPaused\n    };\n  }\n\n  function Cover(Splide2, Components2, options) {\n    var _EventInterface7 = EventInterface(Splide2),\n        on = _EventInterface7.on;\n\n    function mount() {\n      if (options.cover) {\n        on(EVENT_LAZYLOAD_LOADED, apply(toggle, true));\n        on([EVENT_MOUNTED, EVENT_UPDATED, EVENT_REFRESH], apply(cover, true));\n      }\n    }\n\n    function cover(cover2) {\n      Components2.Slides.forEach(function (Slide) {\n        var img = child(Slide.container || Slide.slide, \"img\");\n\n        if (img && img.src) {\n          toggle(cover2, img, Slide);\n        }\n      });\n    }\n\n    function toggle(cover2, img, Slide) {\n      Slide.style(\"background\", cover2 ? \"center/cover no-repeat url(\\\"\" + img.src + \"\\\")\" : \"\", true);\n      display(img, cover2 ? \"none\" : \"\");\n    }\n\n    return {\n      mount: mount,\n      destroy: apply(cover, false)\n    };\n  }\n\n  var BOUNCE_DIFF_THRESHOLD = 10;\n  var BOUNCE_DURATION = 600;\n  var FRICTION_FACTOR = 0.6;\n  var BASE_VELOCITY = 1.5;\n  var MIN_DURATION = 800;\n\n  function Scroll(Splide2, Components2, options) {\n    var _EventInterface8 = EventInterface(Splide2),\n        on = _EventInterface8.on,\n        emit = _EventInterface8.emit;\n\n    var set = Splide2.state.set;\n    var Move = Components2.Move;\n    var getPosition = Move.getPosition,\n        getLimit = Move.getLimit,\n        exceededLimit = Move.exceededLimit,\n        translate = Move.translate;\n    var isSlide = Splide2.is(SLIDE);\n    var interval;\n    var callback;\n    var friction = 1;\n\n    function mount() {\n      on(EVENT_MOVE, clear);\n      on([EVENT_UPDATED, EVENT_REFRESH], cancel);\n    }\n\n    function scroll(destination, duration, snap, onScrolled, noConstrain) {\n      var from = getPosition();\n      clear();\n\n      if (snap && (!isSlide || !exceededLimit())) {\n        var size = Components2.Layout.sliderSize();\n        var offset = sign(destination) * size * floor(abs(destination) / size) || 0;\n        destination = Move.toPosition(Components2.Controller.toDest(destination % size)) + offset;\n      }\n\n      var noDistance = approximatelyEqual(from, destination, 1);\n      friction = 1;\n      duration = noDistance ? 0 : duration || max(abs(destination - from) / BASE_VELOCITY, MIN_DURATION);\n      callback = onScrolled;\n      interval = RequestInterval(duration, onEnd, apply(update, from, destination, noConstrain), 1);\n      set(SCROLLING);\n      emit(EVENT_SCROLL);\n      interval.start();\n    }\n\n    function onEnd() {\n      set(IDLE);\n      callback && callback();\n      emit(EVENT_SCROLLED);\n    }\n\n    function update(from, to, noConstrain, rate) {\n      var position = getPosition();\n      var target = from + (to - from) * easing(rate);\n      var diff = (target - position) * friction;\n      translate(position + diff);\n\n      if (isSlide && !noConstrain && exceededLimit()) {\n        friction *= FRICTION_FACTOR;\n\n        if (abs(diff) < BOUNCE_DIFF_THRESHOLD) {\n          scroll(getLimit(exceededLimit(true)), BOUNCE_DURATION, false, callback, true);\n        }\n      }\n    }\n\n    function clear() {\n      if (interval) {\n        interval.cancel();\n      }\n    }\n\n    function cancel() {\n      if (interval && !interval.isPaused()) {\n        clear();\n        onEnd();\n      }\n    }\n\n    function easing(t) {\n      var easingFunc = options.easingFunc;\n      return easingFunc ? easingFunc(t) : 1 - Math.pow(1 - t, 4);\n    }\n\n    return {\n      mount: mount,\n      destroy: clear,\n      scroll: scroll,\n      cancel: cancel\n    };\n  }\n\n  var SCROLL_LISTENER_OPTIONS = {\n    passive: false,\n    capture: true\n  };\n\n  function Drag(Splide2, Components2, options) {\n    var _EventInterface9 = EventInterface(Splide2),\n        on = _EventInterface9.on,\n        emit = _EventInterface9.emit,\n        bind = _EventInterface9.bind,\n        unbind = _EventInterface9.unbind;\n\n    var state = Splide2.state;\n    var Move = Components2.Move,\n        Scroll = Components2.Scroll,\n        Controller = Components2.Controller,\n        track = Components2.Elements.track,\n        reduce = Components2.Media.reduce;\n    var _Components2$Directio2 = Components2.Direction,\n        resolve = _Components2$Directio2.resolve,\n        orient = _Components2$Directio2.orient;\n    var getPosition = Move.getPosition,\n        exceededLimit = Move.exceededLimit;\n    var basePosition;\n    var baseEvent;\n    var prevBaseEvent;\n    var isFree;\n    var dragging;\n    var exceeded = false;\n    var clickPrevented;\n    var disabled;\n    var target;\n\n    function mount() {\n      bind(track, POINTER_MOVE_EVENTS, noop, SCROLL_LISTENER_OPTIONS);\n      bind(track, POINTER_UP_EVENTS, noop, SCROLL_LISTENER_OPTIONS);\n      bind(track, POINTER_DOWN_EVENTS, onPointerDown, SCROLL_LISTENER_OPTIONS);\n      bind(track, \"click\", onClick, {\n        capture: true\n      });\n      bind(track, \"dragstart\", prevent);\n      on([EVENT_MOUNTED, EVENT_UPDATED], init);\n    }\n\n    function init() {\n      var drag = options.drag;\n      disable(!drag);\n      isFree = drag === \"free\";\n    }\n\n    function onPointerDown(e) {\n      clickPrevented = false;\n\n      if (!disabled) {\n        var isTouch = isTouchEvent(e);\n\n        if (isDraggable(e.target) && (isTouch || !e.button)) {\n          if (!Controller.isBusy()) {\n            target = isTouch ? track : window;\n            dragging = state.is([MOVING, SCROLLING]);\n            prevBaseEvent = null;\n            bind(target, POINTER_MOVE_EVENTS, onPointerMove, SCROLL_LISTENER_OPTIONS);\n            bind(target, POINTER_UP_EVENTS, onPointerUp, SCROLL_LISTENER_OPTIONS);\n            Move.cancel();\n            Scroll.cancel();\n            save(e);\n          } else {\n            prevent(e, true);\n          }\n        }\n      }\n    }\n\n    function onPointerMove(e) {\n      if (!state.is(DRAGGING)) {\n        state.set(DRAGGING);\n        emit(EVENT_DRAG);\n      }\n\n      if (e.cancelable) {\n        if (dragging) {\n          Move.translate(basePosition + constrain(diffCoord(e)));\n          var expired = diffTime(e) > LOG_INTERVAL;\n          var hasExceeded = exceeded !== (exceeded = exceededLimit());\n\n          if (expired || hasExceeded) {\n            save(e);\n          }\n\n          clickPrevented = true;\n          emit(EVENT_DRAGGING);\n          prevent(e);\n        } else if (isSliderDirection(e)) {\n          dragging = shouldStart(e);\n          prevent(e);\n        }\n      }\n    }\n\n    function onPointerUp(e) {\n      if (state.is(DRAGGING)) {\n        state.set(IDLE);\n        emit(EVENT_DRAGGED);\n      }\n\n      if (dragging) {\n        move(e);\n        prevent(e);\n      }\n\n      unbind(target, POINTER_MOVE_EVENTS, onPointerMove);\n      unbind(target, POINTER_UP_EVENTS, onPointerUp);\n      dragging = false;\n    }\n\n    function onClick(e) {\n      if (!disabled && clickPrevented) {\n        prevent(e, true);\n      }\n    }\n\n    function save(e) {\n      prevBaseEvent = baseEvent;\n      baseEvent = e;\n      basePosition = getPosition();\n    }\n\n    function move(e) {\n      var velocity = computeVelocity(e);\n      var destination = computeDestination(velocity);\n      var rewind = options.rewind && options.rewindByDrag;\n      reduce(false);\n\n      if (isFree) {\n        Controller.scroll(destination, 0, options.snap);\n      } else if (Splide2.is(FADE)) {\n        Controller.go(orient(sign(velocity)) < 0 ? rewind ? \"<\" : \"-\" : rewind ? \">\" : \"+\");\n      } else if (Splide2.is(SLIDE) && exceeded && rewind) {\n        Controller.go(exceededLimit(true) ? \">\" : \"<\");\n      } else {\n        Controller.go(Controller.toDest(destination), true);\n      }\n\n      reduce(true);\n    }\n\n    function shouldStart(e) {\n      var thresholds = options.dragMinThreshold;\n      var isObj = isObject(thresholds);\n      var mouse = isObj && thresholds.mouse || 0;\n      var touch = (isObj ? thresholds.touch : +thresholds) || 10;\n      return abs(diffCoord(e)) > (isTouchEvent(e) ? touch : mouse);\n    }\n\n    function isSliderDirection(e) {\n      return abs(diffCoord(e)) > abs(diffCoord(e, true));\n    }\n\n    function computeVelocity(e) {\n      if (Splide2.is(LOOP) || !exceeded) {\n        var time = diffTime(e);\n\n        if (time && time < LOG_INTERVAL) {\n          return diffCoord(e) / time;\n        }\n      }\n\n      return 0;\n    }\n\n    function computeDestination(velocity) {\n      return getPosition() + sign(velocity) * min(abs(velocity) * (options.flickPower || 600), isFree ? Infinity : Components2.Layout.listSize() * (options.flickMaxPages || 1));\n    }\n\n    function diffCoord(e, orthogonal) {\n      return coordOf(e, orthogonal) - coordOf(getBaseEvent(e), orthogonal);\n    }\n\n    function diffTime(e) {\n      return timeOf(e) - timeOf(getBaseEvent(e));\n    }\n\n    function getBaseEvent(e) {\n      return baseEvent === e && prevBaseEvent || baseEvent;\n    }\n\n    function coordOf(e, orthogonal) {\n      return (isTouchEvent(e) ? e.changedTouches[0] : e)[\"page\" + resolve(orthogonal ? \"Y\" : \"X\")];\n    }\n\n    function constrain(diff) {\n      return diff / (exceeded && Splide2.is(SLIDE) ? FRICTION : 1);\n    }\n\n    function isDraggable(target2) {\n      var noDrag = options.noDrag;\n      return !matches(target2, \".\" + CLASS_PAGINATION_PAGE + \", .\" + CLASS_ARROW) && (!noDrag || !matches(target2, noDrag));\n    }\n\n    function isTouchEvent(e) {\n      return typeof TouchEvent !== \"undefined\" && e instanceof TouchEvent;\n    }\n\n    function isDragging() {\n      return dragging;\n    }\n\n    function disable(value) {\n      disabled = value;\n    }\n\n    return {\n      mount: mount,\n      disable: disable,\n      isDragging: isDragging\n    };\n  }\n\n  var NORMALIZATION_MAP = {\n    Spacebar: \" \",\n    Right: ARROW_RIGHT,\n    Left: ARROW_LEFT,\n    Up: ARROW_UP,\n    Down: ARROW_DOWN\n  };\n\n  function normalizeKey(key) {\n    key = isString(key) ? key : key.key;\n    return NORMALIZATION_MAP[key] || key;\n  }\n\n  var KEYBOARD_EVENT = \"keydown\";\n\n  function Keyboard(Splide2, Components2, options) {\n    var _EventInterface10 = EventInterface(Splide2),\n        on = _EventInterface10.on,\n        bind = _EventInterface10.bind,\n        unbind = _EventInterface10.unbind;\n\n    var root = Splide2.root;\n    var resolve = Components2.Direction.resolve;\n    var target;\n    var disabled;\n\n    function mount() {\n      init();\n      on(EVENT_UPDATED, destroy);\n      on(EVENT_UPDATED, init);\n      on(EVENT_MOVE, onMove);\n    }\n\n    function init() {\n      var keyboard = options.keyboard;\n\n      if (keyboard) {\n        target = keyboard === \"global\" ? window : root;\n        bind(target, KEYBOARD_EVENT, onKeydown);\n      }\n    }\n\n    function destroy() {\n      unbind(target, KEYBOARD_EVENT);\n    }\n\n    function disable(value) {\n      disabled = value;\n    }\n\n    function onMove() {\n      var _disabled = disabled;\n      disabled = true;\n      nextTick(function () {\n        disabled = _disabled;\n      });\n    }\n\n    function onKeydown(e) {\n      if (!disabled) {\n        var key = normalizeKey(e);\n\n        if (key === resolve(ARROW_LEFT)) {\n          Splide2.go(\"<\");\n        } else if (key === resolve(ARROW_RIGHT)) {\n          Splide2.go(\">\");\n        }\n      }\n    }\n\n    return {\n      mount: mount,\n      destroy: destroy,\n      disable: disable\n    };\n  }\n\n  var SRC_DATA_ATTRIBUTE = DATA_ATTRIBUTE + \"-lazy\";\n  var SRCSET_DATA_ATTRIBUTE = SRC_DATA_ATTRIBUTE + \"-srcset\";\n  var IMAGE_SELECTOR = \"[\" + SRC_DATA_ATTRIBUTE + \"], [\" + SRCSET_DATA_ATTRIBUTE + \"]\";\n\n  function LazyLoad(Splide2, Components2, options) {\n    var _EventInterface11 = EventInterface(Splide2),\n        on = _EventInterface11.on,\n        off = _EventInterface11.off,\n        bind = _EventInterface11.bind,\n        emit = _EventInterface11.emit;\n\n    var isSequential = options.lazyLoad === \"sequential\";\n    var events = [EVENT_MOVED, EVENT_SCROLLED];\n    var entries = [];\n\n    function mount() {\n      if (options.lazyLoad) {\n        init();\n        on(EVENT_REFRESH, init);\n      }\n    }\n\n    function init() {\n      empty(entries);\n      register();\n\n      if (isSequential) {\n        loadNext();\n      } else {\n        off(events);\n        on(events, check);\n        check();\n      }\n    }\n\n    function register() {\n      Components2.Slides.forEach(function (Slide) {\n        queryAll(Slide.slide, IMAGE_SELECTOR).forEach(function (img) {\n          var src = getAttribute(img, SRC_DATA_ATTRIBUTE);\n          var srcset = getAttribute(img, SRCSET_DATA_ATTRIBUTE);\n\n          if (src !== img.src || srcset !== img.srcset) {\n            var className = options.classes.spinner;\n            var parent = img.parentElement;\n            var spinner = child(parent, \".\" + className) || create(\"span\", className, parent);\n            entries.push([img, Slide, spinner]);\n            img.src || display(img, \"none\");\n          }\n        });\n      });\n    }\n\n    function check() {\n      entries = entries.filter(function (data) {\n        var distance = options.perPage * ((options.preloadPages || 1) + 1) - 1;\n        return data[1].isWithin(Splide2.index, distance) ? load(data) : true;\n      });\n      entries.length || off(events);\n    }\n\n    function load(data) {\n      var img = data[0];\n      addClass(data[1].slide, CLASS_LOADING);\n      bind(img, \"load error\", apply(onLoad, data));\n      setAttribute(img, \"src\", getAttribute(img, SRC_DATA_ATTRIBUTE));\n      setAttribute(img, \"srcset\", getAttribute(img, SRCSET_DATA_ATTRIBUTE));\n      removeAttribute(img, SRC_DATA_ATTRIBUTE);\n      removeAttribute(img, SRCSET_DATA_ATTRIBUTE);\n    }\n\n    function onLoad(data, e) {\n      var img = data[0],\n          Slide = data[1];\n      removeClass(Slide.slide, CLASS_LOADING);\n\n      if (e.type !== \"error\") {\n        remove(data[2]);\n        display(img, \"\");\n        emit(EVENT_LAZYLOAD_LOADED, img, Slide);\n        emit(EVENT_RESIZE);\n      }\n\n      isSequential && loadNext();\n    }\n\n    function loadNext() {\n      entries.length && load(entries.shift());\n    }\n\n    return {\n      mount: mount,\n      destroy: apply(empty, entries),\n      check: check\n    };\n  }\n\n  function Pagination(Splide2, Components2, options) {\n    var event = EventInterface(Splide2);\n    var on = event.on,\n        emit = event.emit,\n        bind = event.bind;\n    var Slides = Components2.Slides,\n        Elements = Components2.Elements,\n        Controller = Components2.Controller;\n    var hasFocus = Controller.hasFocus,\n        getIndex = Controller.getIndex,\n        go = Controller.go;\n    var resolve = Components2.Direction.resolve;\n    var placeholder = Elements.pagination;\n    var items = [];\n    var list;\n    var paginationClasses;\n\n    function mount() {\n      destroy();\n      on([EVENT_UPDATED, EVENT_REFRESH, EVENT_END_INDEX_CHANGED], mount);\n      var enabled = options.pagination;\n      placeholder && display(placeholder, enabled ? \"\" : \"none\");\n\n      if (enabled) {\n        on([EVENT_MOVE, EVENT_SCROLL, EVENT_SCROLLED], update);\n        createPagination();\n        update();\n        emit(EVENT_PAGINATION_MOUNTED, {\n          list: list,\n          items: items\n        }, getAt(Splide2.index));\n      }\n    }\n\n    function destroy() {\n      if (list) {\n        remove(placeholder ? slice(list.children) : list);\n        removeClass(list, paginationClasses);\n        empty(items);\n        list = null;\n      }\n\n      event.destroy();\n    }\n\n    function createPagination() {\n      var length = Splide2.length;\n      var classes = options.classes,\n          i18n = options.i18n,\n          perPage = options.perPage;\n      var max = hasFocus() ? Controller.getEnd() + 1 : ceil(length / perPage);\n      list = placeholder || create(\"ul\", classes.pagination, Elements.track.parentElement);\n      addClass(list, paginationClasses = CLASS_PAGINATION + \"--\" + getDirection());\n      setAttribute(list, ROLE, \"tablist\");\n      setAttribute(list, ARIA_LABEL, i18n.select);\n      setAttribute(list, ARIA_ORIENTATION, getDirection() === TTB ? \"vertical\" : \"\");\n\n      for (var i = 0; i < max; i++) {\n        var li = create(\"li\", null, list);\n        var button = create(\"button\", {\n          class: classes.page,\n          type: \"button\"\n        }, li);\n        var controls = Slides.getIn(i).map(function (Slide) {\n          return Slide.slide.id;\n        });\n        var text = !hasFocus() && perPage > 1 ? i18n.pageX : i18n.slideX;\n        bind(button, \"click\", apply(onClick, i));\n\n        if (options.paginationKeyboard) {\n          bind(button, \"keydown\", apply(onKeydown, i));\n        }\n\n        setAttribute(li, ROLE, \"presentation\");\n        setAttribute(button, ROLE, \"tab\");\n        setAttribute(button, ARIA_CONTROLS, controls.join(\" \"));\n        setAttribute(button, ARIA_LABEL, format(text, i + 1));\n        setAttribute(button, TAB_INDEX, -1);\n        items.push({\n          li: li,\n          button: button,\n          page: i\n        });\n      }\n    }\n\n    function onClick(page) {\n      go(\">\" + page, true);\n    }\n\n    function onKeydown(page, e) {\n      var length = items.length;\n      var key = normalizeKey(e);\n      var dir = getDirection();\n      var nextPage = -1;\n\n      if (key === resolve(ARROW_RIGHT, false, dir)) {\n        nextPage = ++page % length;\n      } else if (key === resolve(ARROW_LEFT, false, dir)) {\n        nextPage = (--page + length) % length;\n      } else if (key === \"Home\") {\n        nextPage = 0;\n      } else if (key === \"End\") {\n        nextPage = length - 1;\n      }\n\n      var item = items[nextPage];\n\n      if (item) {\n        focus(item.button);\n        go(\">\" + nextPage);\n        prevent(e, true);\n      }\n    }\n\n    function getDirection() {\n      return options.paginationDirection || options.direction;\n    }\n\n    function getAt(index) {\n      return items[Controller.toPage(index)];\n    }\n\n    function update() {\n      var prev = getAt(getIndex(true));\n      var curr = getAt(getIndex());\n\n      if (prev) {\n        var button = prev.button;\n        removeClass(button, CLASS_ACTIVE);\n        removeAttribute(button, ARIA_SELECTED);\n        setAttribute(button, TAB_INDEX, -1);\n      }\n\n      if (curr) {\n        var _button = curr.button;\n        addClass(_button, CLASS_ACTIVE);\n        setAttribute(_button, ARIA_SELECTED, true);\n        setAttribute(_button, TAB_INDEX, \"\");\n      }\n\n      emit(EVENT_PAGINATION_UPDATED, {\n        list: list,\n        items: items\n      }, prev, curr);\n    }\n\n    return {\n      items: items,\n      mount: mount,\n      destroy: destroy,\n      getAt: getAt,\n      update: update\n    };\n  }\n\n  var TRIGGER_KEYS = [\" \", \"Enter\"];\n\n  function Sync(Splide2, Components2, options) {\n    var isNavigation = options.isNavigation,\n        slideFocus = options.slideFocus;\n    var events = [];\n\n    function mount() {\n      Splide2.splides.forEach(function (target) {\n        if (!target.isParent) {\n          sync(Splide2, target.splide);\n          sync(target.splide, Splide2);\n        }\n      });\n\n      if (isNavigation) {\n        navigate();\n      }\n    }\n\n    function destroy() {\n      events.forEach(function (event) {\n        event.destroy();\n      });\n      empty(events);\n    }\n\n    function remount() {\n      destroy();\n      mount();\n    }\n\n    function sync(splide, target) {\n      var event = EventInterface(splide);\n      event.on(EVENT_MOVE, function (index, prev, dest) {\n        target.go(target.is(LOOP) ? dest : index);\n      });\n      events.push(event);\n    }\n\n    function navigate() {\n      var event = EventInterface(Splide2);\n      var on = event.on;\n      on(EVENT_CLICK, onClick);\n      on(EVENT_SLIDE_KEYDOWN, onKeydown);\n      on([EVENT_MOUNTED, EVENT_UPDATED], update);\n      events.push(event);\n      event.emit(EVENT_NAVIGATION_MOUNTED, Splide2.splides);\n    }\n\n    function update() {\n      setAttribute(Components2.Elements.list, ARIA_ORIENTATION, options.direction === TTB ? \"vertical\" : \"\");\n    }\n\n    function onClick(Slide) {\n      Splide2.go(Slide.index);\n    }\n\n    function onKeydown(Slide, e) {\n      if (includes(TRIGGER_KEYS, normalizeKey(e))) {\n        onClick(Slide);\n        prevent(e);\n      }\n    }\n\n    return {\n      setup: apply(Components2.Media.set, {\n        slideFocus: isUndefined(slideFocus) ? isNavigation : slideFocus\n      }, true),\n      mount: mount,\n      destroy: destroy,\n      remount: remount\n    };\n  }\n\n  function Wheel(Splide2, Components2, options) {\n    var _EventInterface12 = EventInterface(Splide2),\n        bind = _EventInterface12.bind;\n\n    var lastTime = 0;\n\n    function mount() {\n      if (options.wheel) {\n        bind(Components2.Elements.track, \"wheel\", onWheel, SCROLL_LISTENER_OPTIONS);\n      }\n    }\n\n    function onWheel(e) {\n      if (e.cancelable) {\n        var deltaY = e.deltaY;\n        var backwards = deltaY < 0;\n        var timeStamp = timeOf(e);\n\n        var _min = options.wheelMinThreshold || 0;\n\n        var sleep = options.wheelSleep || 0;\n\n        if (abs(deltaY) > _min && timeStamp - lastTime > sleep) {\n          Splide2.go(backwards ? \"<\" : \">\");\n          lastTime = timeStamp;\n        }\n\n        shouldPrevent(backwards) && prevent(e);\n      }\n    }\n\n    function shouldPrevent(backwards) {\n      return !options.releaseWheel || Splide2.state.is(MOVING) || Components2.Controller.getAdjacent(backwards) !== -1;\n    }\n\n    return {\n      mount: mount\n    };\n  }\n\n  var SR_REMOVAL_DELAY = 90;\n\n  function Live(Splide2, Components2, options) {\n    var _EventInterface13 = EventInterface(Splide2),\n        on = _EventInterface13.on;\n\n    var track = Components2.Elements.track;\n    var enabled = options.live && !options.isNavigation;\n    var sr = create(\"span\", CLASS_SR);\n    var interval = RequestInterval(SR_REMOVAL_DELAY, apply(toggle, false));\n\n    function mount() {\n      if (enabled) {\n        disable(!Components2.Autoplay.isPaused());\n        setAttribute(track, ARIA_ATOMIC, true);\n        sr.textContent = \"\\u2026\";\n        on(EVENT_AUTOPLAY_PLAY, apply(disable, true));\n        on(EVENT_AUTOPLAY_PAUSE, apply(disable, false));\n        on([EVENT_MOVED, EVENT_SCROLLED], apply(toggle, true));\n      }\n    }\n\n    function toggle(active) {\n      setAttribute(track, ARIA_BUSY, active);\n\n      if (active) {\n        append(track, sr);\n        interval.start();\n      } else {\n        remove(sr);\n        interval.cancel();\n      }\n    }\n\n    function destroy() {\n      removeAttribute(track, [ARIA_LIVE, ARIA_ATOMIC, ARIA_BUSY]);\n      remove(sr);\n    }\n\n    function disable(disabled) {\n      if (enabled) {\n        setAttribute(track, ARIA_LIVE, disabled ? \"off\" : \"polite\");\n      }\n    }\n\n    return {\n      mount: mount,\n      disable: disable,\n      destroy: destroy\n    };\n  }\n\n  var ComponentConstructors = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    Media: Media,\n    Direction: Direction,\n    Elements: Elements,\n    Slides: Slides,\n    Layout: Layout,\n    Clones: Clones,\n    Move: Move,\n    Controller: Controller,\n    Arrows: Arrows,\n    Autoplay: Autoplay,\n    Cover: Cover,\n    Scroll: Scroll,\n    Drag: Drag,\n    Keyboard: Keyboard,\n    LazyLoad: LazyLoad,\n    Pagination: Pagination,\n    Sync: Sync,\n    Wheel: Wheel,\n    Live: Live\n  });\n  var I18N = {\n    prev: \"Previous slide\",\n    next: \"Next slide\",\n    first: \"Go to first slide\",\n    last: \"Go to last slide\",\n    slideX: \"Go to slide %s\",\n    pageX: \"Go to page %s\",\n    play: \"Start autoplay\",\n    pause: \"Pause autoplay\",\n    carousel: \"carousel\",\n    slide: \"slide\",\n    select: \"Select a slide to show\",\n    slideLabel: \"%s of %s\"\n  };\n  var DEFAULTS = {\n    type: \"slide\",\n    role: \"region\",\n    speed: 400,\n    perPage: 1,\n    cloneStatus: true,\n    arrows: true,\n    pagination: true,\n    paginationKeyboard: true,\n    interval: 5e3,\n    pauseOnHover: true,\n    pauseOnFocus: true,\n    resetProgress: true,\n    easing: \"cubic-bezier(0.25, 1, 0.5, 1)\",\n    drag: true,\n    direction: \"ltr\",\n    trimSpace: true,\n    focusableNodes: \"a, button, textarea, input, select, iframe\",\n    live: true,\n    classes: CLASSES,\n    i18n: I18N,\n    reducedMotion: {\n      speed: 0,\n      rewindSpeed: 0,\n      autoplay: \"pause\"\n    }\n  };\n\n  function Fade(Splide2, Components2, options) {\n    var Slides = Components2.Slides;\n\n    function mount() {\n      EventInterface(Splide2).on([EVENT_MOUNTED, EVENT_REFRESH], init);\n    }\n\n    function init() {\n      Slides.forEach(function (Slide) {\n        Slide.style(\"transform\", \"translateX(-\" + 100 * Slide.index + \"%)\");\n      });\n    }\n\n    function start(index, done) {\n      Slides.style(\"transition\", \"opacity \" + options.speed + \"ms \" + options.easing);\n      nextTick(done);\n    }\n\n    return {\n      mount: mount,\n      start: start,\n      cancel: noop\n    };\n  }\n\n  function Slide(Splide2, Components2, options) {\n    var Move = Components2.Move,\n        Controller = Components2.Controller,\n        Scroll = Components2.Scroll;\n    var list = Components2.Elements.list;\n    var transition = apply(style, list, \"transition\");\n    var endCallback;\n\n    function mount() {\n      EventInterface(Splide2).bind(list, \"transitionend\", function (e) {\n        if (e.target === list && endCallback) {\n          cancel();\n          endCallback();\n        }\n      });\n    }\n\n    function start(index, done) {\n      var destination = Move.toPosition(index, true);\n      var position = Move.getPosition();\n      var speed = getSpeed(index);\n\n      if (abs(destination - position) >= 1 && speed >= 1) {\n        if (options.useScroll) {\n          Scroll.scroll(destination, speed, false, done);\n        } else {\n          transition(\"transform \" + speed + \"ms \" + options.easing);\n          Move.translate(destination, true);\n          endCallback = done;\n        }\n      } else {\n        Move.jump(index);\n        done();\n      }\n    }\n\n    function cancel() {\n      transition(\"\");\n      Scroll.cancel();\n    }\n\n    function getSpeed(index) {\n      var rewindSpeed = options.rewindSpeed;\n\n      if (Splide2.is(SLIDE) && rewindSpeed) {\n        var prev = Controller.getIndex(true);\n        var end = Controller.getEnd();\n\n        if (prev === 0 && index >= end || prev >= end && index === 0) {\n          return rewindSpeed;\n        }\n      }\n\n      return options.speed;\n    }\n\n    return {\n      mount: mount,\n      start: start,\n      cancel: cancel\n    };\n  }\n\n  var _Splide = /*#__PURE__*/function () {\n    function _Splide(target, options) {\n      this.event = EventInterface();\n      this.Components = {};\n      this.state = State(CREATED);\n      this.splides = [];\n      this._o = {};\n      this._E = {};\n      var root = isString(target) ? query(document, target) : target;\n      assert(root, root + \" is invalid.\");\n      this.root = root;\n      options = merge({\n        label: getAttribute(root, ARIA_LABEL) || \"\",\n        labelledby: getAttribute(root, ARIA_LABELLEDBY) || \"\"\n      }, DEFAULTS, _Splide.defaults, options || {});\n\n      try {\n        merge(options, JSON.parse(getAttribute(root, DATA_ATTRIBUTE)));\n      } catch (e) {\n        assert(false, \"Invalid JSON\");\n      }\n\n      this._o = Object.create(merge({}, options));\n    }\n\n    var _proto = _Splide.prototype;\n\n    _proto.mount = function mount(Extensions, Transition) {\n      var _this = this;\n\n      var state = this.state,\n          Components2 = this.Components;\n      assert(state.is([CREATED, DESTROYED]), \"Already mounted!\");\n      state.set(CREATED);\n      this._C = Components2;\n      this._T = Transition || this._T || (this.is(FADE) ? Fade : Slide);\n      this._E = Extensions || this._E;\n      var Constructors = assign({}, ComponentConstructors, this._E, {\n        Transition: this._T\n      });\n      forOwn(Constructors, function (Component, key) {\n        var component = Component(_this, Components2, _this._o);\n        Components2[key] = component;\n        component.setup && component.setup();\n      });\n      forOwn(Components2, function (component) {\n        component.mount && component.mount();\n      });\n      this.emit(EVENT_MOUNTED);\n      addClass(this.root, CLASS_INITIALIZED);\n      state.set(IDLE);\n      this.emit(EVENT_READY);\n      return this;\n    };\n\n    _proto.sync = function sync(splide) {\n      this.splides.push({\n        splide: splide\n      });\n      splide.splides.push({\n        splide: this,\n        isParent: true\n      });\n\n      if (this.state.is(IDLE)) {\n        this._C.Sync.remount();\n\n        splide.Components.Sync.remount();\n      }\n\n      return this;\n    };\n\n    _proto.go = function go(control) {\n      this._C.Controller.go(control);\n\n      return this;\n    };\n\n    _proto.on = function on(events, callback) {\n      this.event.on(events, callback);\n      return this;\n    };\n\n    _proto.off = function off(events) {\n      this.event.off(events);\n      return this;\n    };\n\n    _proto.emit = function emit(event) {\n      var _this$event;\n\n      (_this$event = this.event).emit.apply(_this$event, [event].concat(slice(arguments, 1)));\n\n      return this;\n    };\n\n    _proto.add = function add(slides, index) {\n      this._C.Slides.add(slides, index);\n\n      return this;\n    };\n\n    _proto.remove = function remove(matcher) {\n      this._C.Slides.remove(matcher);\n\n      return this;\n    };\n\n    _proto.is = function is(type) {\n      return this._o.type === type;\n    };\n\n    _proto.refresh = function refresh() {\n      this.emit(EVENT_REFRESH);\n      return this;\n    };\n\n    _proto.destroy = function destroy(completely) {\n      if (completely === void 0) {\n        completely = true;\n      }\n\n      var event = this.event,\n          state = this.state;\n\n      if (state.is(CREATED)) {\n        EventInterface(this).on(EVENT_READY, this.destroy.bind(this, completely));\n      } else {\n        forOwn(this._C, function (component) {\n          component.destroy && component.destroy(completely);\n        }, true);\n        event.emit(EVENT_DESTROY);\n        event.destroy();\n        completely && empty(this.splides);\n        state.set(DESTROYED);\n      }\n\n      return this;\n    };\n\n    _createClass(_Splide, [{\n      key: \"options\",\n      get: function get() {\n        return this._o;\n      },\n      set: function set(options) {\n        this._C.Media.set(options, true, true);\n      }\n    }, {\n      key: \"length\",\n      get: function get() {\n        return this._C.Slides.getLength(true);\n      }\n    }, {\n      key: \"index\",\n      get: function get() {\n        return this._C.Controller.getIndex();\n      }\n    }]);\n\n    return _Splide;\n  }();\n\n  var Splide = _Splide;\n  Splide.defaults = {};\n  Splide.STATES = STATES;\n  return Splide;\n});\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}